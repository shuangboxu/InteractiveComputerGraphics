#include "NameVertices.h"
using namespace DirectX;

// ==== 许双博改的：把四个名字的数据放在四个 case 里，自动计数 ====
NameVertices::NameVertices(D3D11_PRIMITIVE_TOPOLOGY type, int id)
{
    topology = type;

    // --------- 安全的占位三角形（当你还没粘贴真实数据时可用）---------
    static const GameApp::VertexPosColor fallbackVerts[] = {
        { XMFLOAT3(0.0f,  0.3f, 0.0f), XMFLOAT4(1,0,0,1) },
        { XMFLOAT3(0.3f, -0.3f, 0.0f), XMFLOAT4(0,1,0,1) },
        { XMFLOAT3(-0.3f, -0.3f, 0.0f), XMFLOAT4(0,0,1,1) },
    };
    static const WORD fallbackIdx[] = { 0,1,2 };

    // 为了方便粘贴，我把四个字的数据块拆开。每个块都“可独立编译”：
    // 你只需要把自己的 顶点/索引 整段粘到对应位置即可；_countof 会自动算数量。

    switch (id)
    {
    case 0: // ===== 许 =====  （示例里我先放你给的两行；粘贴完整数据后即可）
    {
        static const GameApp::VertexPosColor tempVertices[] = {
            // ==== 在这里粘贴“许”的所有顶点 ====
    { XMFLOAT3(-1.14, -17.22, 0), XMFLOAT4(0.54, 0.98, 0.2, 1.0f) },
    { XMFLOAT3(-17, -12.66, 0), XMFLOAT4(1.0, 0.97, 0.51, 1.0f) },
    { XMFLOAT3(-17, -12.66, 10), XMFLOAT4(0.01, 0.77, 0.1, 1.0f) },
    { XMFLOAT3(-17, -9.5, 10), XMFLOAT4(0.47, 0.73, 0.62, 1.0f) },
    { XMFLOAT3(-17, -9.5, 0), XMFLOAT4(0.89, 0.95, 0.46, 1.0f) },
    { XMFLOAT3(2.22, -27, 0), XMFLOAT4(0.95, 0.84, 0.71, 1.0f) },
    { XMFLOAT3(2.22, -27, 10), XMFLOAT4(0.34, 0.29, 0.21, 1.0f) },
    { XMFLOAT3(-11.176, -7.349, 0), XMFLOAT4(0.47, 0.22, 0.21, 1.0f) },
    { XMFLOAT3(-10.66, -8.02, 0), XMFLOAT4(0.55, 0.5, 0.85, 1.0f) },
    { XMFLOAT3(-10.66, -8.02, 10), XMFLOAT4(0.77, 0.08, 0.92, 1.0f) },
    { XMFLOAT3(-11.176, -7.349, 10), XMFLOAT4(0.05, 0.31, 0.15, 1.0f) },
    { XMFLOAT3(-7.081, -21.51, 0), XMFLOAT4(0.18, 0.89, 0.22, 1.0f) },
    { XMFLOAT3(-13.169, -22.272, 10), XMFLOAT4(0.37, 0.55, 0.56, 1.0f) },
    { XMFLOAT3(-13.395, -22.748, 10), XMFLOAT4(0.14, 0.08, 0.58, 1.0f) },
    { XMFLOAT3(-7.081, -21.51, 10), XMFLOAT4(0.9, 0.07, 0.52, 1.0f) },
    { XMFLOAT3(-6.927, -21.963, 10), XMFLOAT4(0.34, 0.12, 0.62, 1.0f) },
    { XMFLOAT3(-13.976, -24.132, 10), XMFLOAT4(0.87, 0.04, 0.81, 1.0f) },
    { XMFLOAT3(-6.927, -21.963, 0), XMFLOAT4(0.67, 0.31, 0.06, 1.0f) },
    { XMFLOAT3(-13.016, -21.734, 10), XMFLOAT4(0.93, 0.28, 0.08, 1.0f) },
    { XMFLOAT3(-12.96, -21.14, 10), XMFLOAT4(0.79, 0.84, 0.48, 1.0f) },
    { XMFLOAT3(-1.14, -27, 10), XMFLOAT4(0.3, 0.1, 0.94, 1.0f) },
    { XMFLOAT3(-1.14, -27, 0), XMFLOAT4(0.08, 0.47, 0.94, 1.0f) },
    { XMFLOAT3(2.22, -14.04, 0), XMFLOAT4(0.85, 0.44, 0.58, 1.0f) },
    { XMFLOAT3(8.82, -14.04, 0), XMFLOAT4(0.93, 0.99, 0.05, 1.0f) },
    { XMFLOAT3(-7.753, -9.574, 10), XMFLOAT4(0.39, 0.88, 0.08, 1.0f) },
    { XMFLOAT3(-7.58, -19.5, 0), XMFLOAT4(0.48, 0.26, 0.54, 1.0f) },
    { XMFLOAT3(-7.492, -19.977, 0), XMFLOAT4(0.42, 0.13, 0.32, 1.0f) },
    { XMFLOAT3(7.76, -5.02, 0), XMFLOAT4(0.15, 0.93, 0.45, 1.0f) },
    { XMFLOAT3(7.76, -8.22, 0), XMFLOAT4(0.62, 0.54, 0.08, 1.0f) },
    { XMFLOAT3(2.22, -8.22, 0), XMFLOAT4(0.24, 0.83, 0.24, 1.0f) },
    { XMFLOAT3(-1.14, -8.22, 10), XMFLOAT4(0.65, 0.89, 0.48, 1.0f) },
    { XMFLOAT3(-5.936, -12.058, 10), XMFLOAT4(0.81, 0.67, 0.14, 1.0f) },
    { XMFLOAT3(-3.52, -8.22, 10), XMFLOAT4(0.2, 0.84, 0.07, 1.0f) },
    { XMFLOAT3(-6.452, -11.787, 10), XMFLOAT4(0.92, 0.93, 0.2, 1.0f) },
    { XMFLOAT3(-3.82, -8.994, 10), XMFLOAT4(0.1, 0.91, 0.14, 1.0f) },
    { XMFLOAT3(-6.78, -22.34, 10), XMFLOAT4(0.68, 0.68, 0.17, 1.0f) },
    { XMFLOAT3(-6.78, -22.34, 0), XMFLOAT4(0.15, 0.17, 0.42, 1.0f) },
    { XMFLOAT3(-7.022, -11.505, 10), XMFLOAT4(0.3, 0.69, 0.84, 1.0f) },
    { XMFLOAT3(-13.974, -23.488, 0), XMFLOAT4(0.84, 0.99, 0.89, 1.0f) },
    { XMFLOAT3(-14.28, -23.74, 0), XMFLOAT4(0.95, 0.2, 0.41, 1.0f) },
    { XMFLOAT3(-14.28, -23.74, 10), XMFLOAT4(0.56, 0.95, 0.36, 1.0f) },
    { XMFLOAT3(-13.974, -23.488, 10), XMFLOAT4(0.73, 0.42, 0.72, 1.0f) },
    { XMFLOAT3(-5.847, -4.804, 0), XMFLOAT4(0.24, 0.11, 0.72, 1.0f) },
    { XMFLOAT3(-7.601, -11.233, 10), XMFLOAT4(0.53, 0.36, 0.22, 1.0f) },
    { XMFLOAT3(-13.671, -23.155, 0), XMFLOAT4(0.96, 0.26, 0.6, 1.0f) },
    { XMFLOAT3(-13.671, -23.155, 10), XMFLOAT4(0.48, 0.69, 0.06, 1.0f) },
    { XMFLOAT3(-5.422, -2.972, 0), XMFLOAT4(0.93, 0.41, 0.57, 1.0f) },
    { XMFLOAT3(-13.395, -22.748, 0), XMFLOAT4(0.57, 0.39, 0.5, 1.0f) },
    { XMFLOAT3(-5.1, -1.08, 0), XMFLOAT4(0.57, 0.94, 0.9, 1.0f) },
    { XMFLOAT3(-1.86, -1.58, 0), XMFLOAT4(0.06, 0.71, 0.86, 1.0f) },
    { XMFLOAT3(-8.143, -10.992, 10), XMFLOAT4(0.64, 0.58, 0.09, 1.0f) },
    { XMFLOAT3(-1.962, -2.175, 0), XMFLOAT4(0.71, 0.05, 0.67, 1.0f) },
    { XMFLOAT3(-2.068, -2.761, 0), XMFLOAT4(0.28, 0.31, 0.47, 1.0f) },
    { XMFLOAT3(-2.18, -3.337, 0), XMFLOAT4(0.68, 0.58, 0.33, 1.0f) },
    { XMFLOAT3(-2.299, -3.906, 0), XMFLOAT4(0.86, 0.74, 0.11, 1.0f) },
    { XMFLOAT3(-2.425, -4.467, 0), XMFLOAT4(0.69, 0.13, 0.89, 1.0f) },
    { XMFLOAT3(-2.56, -5.02, 0), XMFLOAT4(0.25, 0.48, 0.05, 1.0f) },
    { XMFLOAT3(-13.169, -22.272, 0), XMFLOAT4(0.27, 0.06, 0.95, 1.0f) },
    { XMFLOAT3(-7.373, -20.49, 0), XMFLOAT4(0.35, 0.41, 0.98, 1.0f) },
    { XMFLOAT3(-11.833, -6.601, 0), XMFLOAT4(0.87, 0.59, 0.04, 1.0f) },
    { XMFLOAT3(-11.833, -6.601, 10), XMFLOAT4(0.81, 0.3, 0.55, 1.0f) },
    { XMFLOAT3(-13.976, -24.132, 0), XMFLOAT4(0.57, 0.66, 0.73, 1.0f) },
    { XMFLOAT3(-7.013, -8.142, 0), XMFLOAT4(0.73, 0.22, 0.05, 1.0f) },
    { XMFLOAT3(-7.232, -21.01, 0), XMFLOAT4(0.56, 0.91, 0.99, 1.0f) },
    { XMFLOAT3(-6.377, -6.54, 0), XMFLOAT4(0.24, 0.71, 0.86, 1.0f) },
    { XMFLOAT3(-13.016, -21.734, 0), XMFLOAT4(0.37, 0.94, 0.92, 1.0f) },
    { XMFLOAT3(-12.96, -21.14, 0), XMFLOAT4(0.26, 0.1, 0.74, 1.0f) },
    { XMFLOAT3(-5.162, -11.726, 10), XMFLOAT4(0.37, 0.5, 0.57, 1.0f) },
    { XMFLOAT3(-1.14, -8.22, 0), XMFLOAT4(0.4, 0.51, 0.08, 1.0f) },
    { XMFLOAT3(-4.81, -11.104, 10), XMFLOAT4(0.07, 0.08, 0.94, 1.0f) },
    { XMFLOAT3(-8.739, -23.705, 10), XMFLOAT4(0.49, 0.17, 0.9, 1.0f) },
    { XMFLOAT3(-8.739, -23.705, 0), XMFLOAT4(0.62, 0.0, 0.71, 1.0f) },
    { XMFLOAT3(-4.467, -10.44, 10), XMFLOAT4(0.82, 0.36, 0.84, 1.0f) },
    { XMFLOAT3(-3.52, -8.22, 0), XMFLOAT4(0.11, 0.63, 0.19, 1.0f) },
    { XMFLOAT3(-4.136, -9.736, 10), XMFLOAT4(0.29, 0.77, 0.35, 1.0f) },
    { XMFLOAT3(-3.82, -8.994, 0), XMFLOAT4(0.09, 0.12, 0.98, 1.0f) },
    { XMFLOAT3(-8.22, -17.22, 0), XMFLOAT4(0.58, 0.76, 0.51, 1.0f) },
    { XMFLOAT3(-8.22, -17.22, 10), XMFLOAT4(0.35, 0.25, 0.64, 1.0f) },
    { XMFLOAT3(-7.753, -9.574, 0), XMFLOAT4(0.3, 0.85, 0.43, 1.0f) },
    { XMFLOAT3(-9.74, -20.96, 10), XMFLOAT4(0.23, 0.95, 0.04, 1.0f) },
    { XMFLOAT3(-9.74, -20.96, 0), XMFLOAT4(0.49, 0.75, 0.56, 1.0f) },
    { XMFLOAT3(-5.936, -12.058, 0), XMFLOAT4(0.49, 0.42, 0.49, 1.0f) },
    { XMFLOAT3(-5.52, -12.3, 10), XMFLOAT4(0.01, 0.76, 0.68, 1.0f) },
    { XMFLOAT3(-6.452, -11.787, 0), XMFLOAT4(0.13, 0.2, 0.63, 1.0f) },
    { XMFLOAT3(-12.739, -26.253, 0), XMFLOAT4(0.17, 0.59, 0.32, 1.0f) },
    { XMFLOAT3(-12.56, -26.72, 0), XMFLOAT4(0.44, 0.4, 0.61, 1.0f) },
    { XMFLOAT3(-12.56, -26.72, 10), XMFLOAT4(0.08, 0.18, 0.28, 1.0f) },
    { XMFLOAT3(-12.739, -26.253, 10), XMFLOAT4(0.14, 0.13, 0.06, 1.0f) },
    { XMFLOAT3(-7.022, -11.505, 0), XMFLOAT4(0.17, 0.75, 0.63, 1.0f) },
    { XMFLOAT3(-1.14, -14.04, 10), XMFLOAT4(0.03, 0.83, 0.18, 1.0f) },
    { XMFLOAT3(-7.601, -11.233, 0), XMFLOAT4(0.67, 0.84, 0.29, 1.0f) },
    { XMFLOAT3(-12.997, -25.721, 0), XMFLOAT4(0.72, 0.51, 0.7, 1.0f) },
    { XMFLOAT3(-12.997, -25.721, 10), XMFLOAT4(0.0, 0.16, 0.21, 1.0f) },
    { XMFLOAT3(-8.143, -10.992, 0), XMFLOAT4(0.21, 0.12, 0.99, 1.0f) },
    { XMFLOAT3(-13.307, -25.163, 0), XMFLOAT4(0.31, 0.81, 0.11, 1.0f) },
    { XMFLOAT3(-13.307, -25.163, 10), XMFLOAT4(0.85, 0.05, 0.86, 1.0f) },
    { XMFLOAT3(-13.643, -24.619, 0), XMFLOAT4(0.15, 0.25, 0.71, 1.0f) },
    { XMFLOAT3(-13.643, -24.619, 10), XMFLOAT4(0.73, 0.87, 0.84, 1.0f) },
    { XMFLOAT3(-10.176, -24.724, 0), XMFLOAT4(0.52, 0.93, 0.55, 1.0f) },
    { XMFLOAT3(-4.136, -9.736, 0), XMFLOAT4(0.18, 0.28, 0.61, 1.0f) },
    { XMFLOAT3(-4.467, -10.44, 0), XMFLOAT4(0.63, 0.09, 0.8, 1.0f) },
    { XMFLOAT3(-4.81, -11.104, 0), XMFLOAT4(0.87, 0.93, 0.59, 1.0f) },
    { XMFLOAT3(-5.162, -11.726, 0), XMFLOAT4(0.35, 0.44, 0.7, 1.0f) },
    { XMFLOAT3(-11.185, -25.467, 0), XMFLOAT4(0.99, 0.46, 0.44, 1.0f) },
    { XMFLOAT3(-10.176, -24.724, 10), XMFLOAT4(0.54, 0.71, 0.82, 1.0f) },
    { XMFLOAT3(-11.185, -25.467, 10), XMFLOAT4(0.56, 0.16, 0.01, 1.0f) },
    { XMFLOAT3(-11.857, -26.002, 10), XMFLOAT4(0.83, 0.42, 0.19, 1.0f) },
    { XMFLOAT3(-11.857, -26.002, 0), XMFLOAT4(0.43, 0.47, 0.95, 1.0f) },
    { XMFLOAT3(-12.285, -26.397, 10), XMFLOAT4(0.85, 0.9, 0.66, 1.0f) },
    { XMFLOAT3(-12.285, -26.397, 0), XMFLOAT4(0.31, 0.11, 0.55, 1.0f) },
    { XMFLOAT3(-1.14, -14.04, 0), XMFLOAT4(0.74, 0.99, 0.26, 1.0f) },
    { XMFLOAT3(-5.52, -12.3, 0), XMFLOAT4(0.32, 0.06, 0.08, 1.0f) },
    { XMFLOAT3(-12.585, -5.812, 0), XMFLOAT4(0.62, 0.76, 0.25, 1.0f) },
    { XMFLOAT3(-13.387, -5.019, 0), XMFLOAT4(0.62, 0.43, 0.87, 1.0f) },
    { XMFLOAT3(-14.194, -4.256, 0), XMFLOAT4(0.43, 0.53, 0.33, 1.0f) },
    { XMFLOAT3(-8.882, -5.057, 0), XMFLOAT4(0.7, 0.84, 0.89, 1.0f) },
    { XMFLOAT3(-8.32, -5.7, 0), XMFLOAT4(0.75, 0.45, 1.0, 1.0f) },
    { XMFLOAT3(-14.96, -3.56, 0), XMFLOAT4(0.4, 0.63, 0.11, 1.0f) },
    { XMFLOAT3(-12.8, -1.46, 0), XMFLOAT4(0.71, 0.73, 0.85, 1.0f) },
    { XMFLOAT3(-12.021, -2.128, 0), XMFLOAT4(0.38, 0.94, 0.21, 1.0f) },
    { XMFLOAT3(-11.194, -2.853, 0), XMFLOAT4(0.56, 0.49, 0.5, 1.0f) },
    { XMFLOAT3(-10.365, -3.603, 0), XMFLOAT4(0.45, 0.35, 0.4, 1.0f) },
    { XMFLOAT3(-9.579, -4.347, 0), XMFLOAT4(0.59, 0.52, 0.86, 1.0f) },
    { XMFLOAT3(-8.22, -14.04, 0), XMFLOAT4(0.53, 0.68, 0.75, 1.0f) },
    { XMFLOAT3(-12.96, -12.66, 0), XMFLOAT4(0.03, 0.89, 0.65, 1.0f) },
    { XMFLOAT3(-8.6, -10.8, 0), XMFLOAT4(0.12, 0.17, 0.5, 1.0f) },
    { XMFLOAT3(-9.74, -9.5, 0), XMFLOAT4(0.4, 0.06, 0.84, 1.0f) },
    { XMFLOAT3(8.82, -17.22, 0), XMFLOAT4(0.11, 0.7, 0.23, 1.0f) },
    { XMFLOAT3(2.22, -17.22, 0), XMFLOAT4(0.21, 0.93, 0.1, 1.0f) },
    { XMFLOAT3(-12.585, -5.812, 10), XMFLOAT4(0.27, 0.42, 0.27, 1.0f) },
    { XMFLOAT3(-13.387, -5.019, 10), XMFLOAT4(0.01, 0.8, 0.25, 1.0f) },
    { XMFLOAT3(-14.194, -4.256, 10), XMFLOAT4(0.33, 0.62, 0.94, 1.0f) },
    { XMFLOAT3(2.22, -14.04, 10), XMFLOAT4(0.53, 0.1, 0.63, 1.0f) },
    { XMFLOAT3(8.82, -14.04, 10), XMFLOAT4(0.72, 0.8, 0.09, 1.0f) },
    { XMFLOAT3(7.76, -8.22, 10), XMFLOAT4(0.8, 0.62, 0.78, 1.0f) },
    { XMFLOAT3(2.22, -8.22, 10), XMFLOAT4(0.57, 0.4, 0.42, 1.0f) },
    { XMFLOAT3(7.76, -5.02, 10), XMFLOAT4(0.92, 0.18, 0.32, 1.0f) },
    { XMFLOAT3(-12.8, -1.46, 10), XMFLOAT4(0.24, 0.53, 0.52, 1.0f) },
    { XMFLOAT3(-14.96, -3.56, 10), XMFLOAT4(0.5, 0.56, 0.69, 1.0f) },
    { XMFLOAT3(-8.32, -5.7, 10), XMFLOAT4(0.37, 0.25, 0.88, 1.0f) },
    { XMFLOAT3(-8.882, -5.057, 10), XMFLOAT4(0.11, 0.96, 0.34, 1.0f) },
    { XMFLOAT3(-9.579, -4.347, 10), XMFLOAT4(0.54, 0.34, 0.38, 1.0f) },
    { XMFLOAT3(-10.365, -3.603, 10), XMFLOAT4(0.56, 0.85, 0.51, 1.0f) },
    { XMFLOAT3(-11.194, -2.853, 10), XMFLOAT4(0.48, 0.67, 0.11, 1.0f) },
    { XMFLOAT3(-12.021, -2.128, 10), XMFLOAT4(0.37, 0.16, 0.89, 1.0f) },
    { XMFLOAT3(-8.22, -14.04, 10), XMFLOAT4(0.5, 0.29, 0.76, 1.0f) },
    { XMFLOAT3(-2.425, -4.467, 10), XMFLOAT4(0.84, 0.17, 0.79, 1.0f) },
    { XMFLOAT3(-2.56, -5.02, 10), XMFLOAT4(0.27, 0.12, 0.5, 1.0f) },
    { XMFLOAT3(-2.299, -3.906, 10), XMFLOAT4(0.51, 0.7, 0.48, 1.0f) },
    { XMFLOAT3(-12.96, -12.66, 10), XMFLOAT4(0.01, 0.76, 0.77, 1.0f) },
    { XMFLOAT3(-2.18, -3.337, 10), XMFLOAT4(0.18, 0.9, 0.14, 1.0f) },
    { XMFLOAT3(-8.6, -10.8, 10), XMFLOAT4(0.11, 0.64, 0.42, 1.0f) },
    { XMFLOAT3(-2.068, -2.761, 10), XMFLOAT4(0.24, 0.23, 0.51, 1.0f) },
    { XMFLOAT3(-9.74, -9.5, 10), XMFLOAT4(0.94, 0.02, 0.06, 1.0f) },
    { XMFLOAT3(-1.962, -2.175, 10), XMFLOAT4(0.29, 0.81, 0.6, 1.0f) },
    { XMFLOAT3(-1.86, -1.58, 10), XMFLOAT4(0.35, 0.94, 0.51, 1.0f) },
    { XMFLOAT3(2.22, -17.22, 10), XMFLOAT4(0.26, 0.27, 0.61, 1.0f) },
    { XMFLOAT3(8.82, -17.22, 10), XMFLOAT4(0.31, 0.71, 0.9, 1.0f) },
    { XMFLOAT3(-5.1, -1.08, 10), XMFLOAT4(0.97, 0.99, 0.61, 1.0f) },
    { XMFLOAT3(-5.847, -4.804, 10), XMFLOAT4(0.81, 0.31, 0.51, 1.0f) },
    { XMFLOAT3(-1.14, -17.22, 10), XMFLOAT4(0.18, 0.18, 0.12, 1.0f) },
    { XMFLOAT3(-5.422, -2.972, 10), XMFLOAT4(0.27, 0.11, 0.27, 1.0f) },
    { XMFLOAT3(-7.58, -19.5, 10), XMFLOAT4(0.54, 0.87, 0.77, 1.0f) },
    { XMFLOAT3(-7.492, -19.977, 10), XMFLOAT4(0.58, 0.21, 0.38, 1.0f) },
    { XMFLOAT3(-7.013, -8.142, 10), XMFLOAT4(0.53, 0.21, 0.48, 1.0f) },
    { XMFLOAT3(-6.377, -6.54, 10), XMFLOAT4(0.98, 0.89, 0.58, 1.0f) },
    { XMFLOAT3(-7.373, -20.49, 10), XMFLOAT4(0.46, 0.11, 0.76, 1.0f) },
    { XMFLOAT3(-7.232, -21.01, 10), XMFLOAT4(0.47, 0.15, 0.69, 1.0f) },
        };
        static const WORD tempIndices[] = {
            3,2,1,
    4,3,1,
    15,14,11,
    17,15,11,
    128,0,5,
    9,8,7,
    10,9,7,
    20,6,5,
    21,20,5,
    29,28,27,
    35,15,17,
    36,35,17,
    110,22,29,
    22,110,128,
    40,39,38,
    41,40,38,
    41,38,44,
    45,41,44,
    48,52,51,
    45,44,47,
    13,45,47,
    39,40,16,
    48,51,49,
    52,48,46,
    46,53,52,
    46,54,53,
    46,55,54,
    55,46,42,
    56,55,42,
    26,80,58,
    13,47,57,
    12,13,57,
    10,7,59,
    60,10,59,
    58,80,63,
    80,26,25,
    63,80,11,
    16,61,39,
    11,71,17,
    12,57,65,
    18,12,65,
    17,71,36,
    61,16,97,
    73,56,64,
    62,75,73,
    64,56,42,
    56,73,68,
    56,29,27,
    18,65,66,
    19,18,66,
    38,61,44,
    73,64,62,
    36,71,70,
    61,38,39,
    44,96,47,
    98,70,71,
    47,80,57,
    62,100,99,
    62,99,75,
    65,80,66,
    81,102,83,
    86,85,84,
    87,86,84,
    83,101,88,
    80,103,98,
    80,98,71,
    80,96,94,
    80,71,11,
    87,84,91,
    92,87,91,
    84,107,91,
    92,91,94,
    95,92,94,
    80,47,96,
    85,86,108,
    69,72,100,
    101,69,100,
    95,94,96,
    97,95,96,
    72,74,100,
    103,80,94,
    97,96,61,
    67,31,33,
    98,104,70,
    105,104,98,
    103,105,98,
    24,37,43,
    24,33,37,
    106,105,103,
    107,106,103,
    108,106,107,
    109,108,107,
    75,32,73,
    85,108,109,
    81,82,111,
    82,81,31,
    100,62,78,
    78,101,100,
    101,78,88,
    101,83,102,
    88,78,90,
    93,78,125,
    78,93,90,
    89,145,110,
    123,76,0,
    110,0,128,
    0,110,123,
    110,68,89,
    29,56,68,
    29,68,110,
    81,111,102,
    102,82,67,
    7,115,59,
    33,31,81,
    116,7,8,
    59,121,112,
    113,120,119,
    114,119,118,
    33,88,37,
    115,7,116,
    114,118,117,
    119,114,113,
    120,113,112,
    112,121,120,
    59,122,121,
    122,59,115,
    43,37,88,
    90,43,88,
    80,124,66,
    50,43,90,
    126,124,80,
    124,4,1,
    4,124,126,
    81,83,33,
    22,128,127,
    23,22,127,
    21,5,0,
    82,102,111,
    88,33,83,
    69,102,67,
    102,69,101,
    12,104,13,
    72,24,164,
    72,164,74,
    74,164,34,
    34,164,32,
    24,72,69,
    32,164,165,
    67,33,24,
    24,43,50,
    93,50,90,
    79,18,19,
    70,12,18,
    12,70,104,
    105,45,13,
    70,18,79,
    79,14,70,
    89,77,145,
    125,50,93,
    31,67,82,
    87,108,86,
    87,106,108,
    106,87,92,
    10,140,139,
    10,139,9,
    105,13,104,
    60,141,140,
    140,10,60,
    100,74,99,
    105,92,95,
    92,105,106,
    45,105,97,
    97,105,95,
    132,22,23,
    133,132,23,
    134,28,29,
    135,134,29,
    136,27,28,
    134,136,28,
    74,75,99,
    29,22,132,
    135,29,132,
    131,138,137,
    142,60,129,
    130,143,129,
    144,130,131,
    141,60,142,
    142,129,143,
    143,130,144,
    144,131,137,
    146,55,56,
    147,146,56,
    145,123,110,
    148,54,55,
    146,148,55,
    149,79,19,
    79,149,153,
    150,53,54,
    148,150,54,
    151,24,50,
    152,52,53,
    150,152,53,
    149,3,153,
    122,115,140,
    141,122,140,
    154,51,52,
    152,154,52,
    3,149,2,
    155,49,51,
    154,155,51,
    142,121,122,
    141,142,122,
    156,132,157,
    158,48,49,
    155,158,49,
    156,89,132,
    6,20,156,
    143,120,121,
    142,143,121,
    144,119,120,
    143,144,120,
    159,42,46,
    161,159,46,
    137,118,119,
    144,137,119,
    160,89,156,
    160,156,20,
    161,46,48,
    158,161,48,
    138,117,118,
    137,138,118,
    147,27,136,
    27,147,56,
    77,89,160,
    78,164,24,
    164,78,62,
    164,62,64,
    165,164,64,
    163,79,162,
    64,159,165,
    159,64,42,
    79,163,166,
    30,89,68,
    167,79,166,
    30,68,32,
    15,35,70,
    14,79,167,
    70,14,15,
    75,74,34,
    32,68,73,
    41,16,40,
    75,34,32,
    16,41,45,
    45,97,16,
    103,91,107,
    107,84,109,
    60,59,112,
    129,60,112,
    109,84,85,
    91,103,94,
    96,44,61,
    57,80,65,
    8,139,116,
    157,133,23,
    127,157,23,
    130,129,112,
    113,130,112,
    157,132,133,
    139,8,9,
    134,135,136,
    131,130,113,
    114,131,113,
    132,89,135,
    135,147,136,
    138,131,114,
    117,138,114,
    116,139,140,
    115,116,140,
    146,159,161,
    161,148,146,
    161,150,148,
    161,152,150,
    152,161,158,
    154,152,158,
    155,154,158,
    126,153,4,
    19,66,124,
    149,19,124,
    24,69,67,
    147,159,146,
    159,147,165,
    147,32,165,
    147,30,32,
    147,135,30,
    135,89,30,
    76,145,77,
    145,76,123,
    153,126,80,
    153,80,79,
    2,149,124,
    1,2,124,
    125,24,151,
    24,125,78,
    151,50,125,
    153,3,4,
    157,127,128,
    156,157,128,
    128,5,6,
    156,128,6,
    20,21,0,
    70,35,36,
    160,20,0,
    77,160,0,
    163,162,25,
    26,163,25,
    166,163,26,
    58,166,26,
    76,77,0,
    167,166,58,
    63,167,58,
    25,162,79,
    14,167,63,
    11,14,63,
    79,80,25,

        };

        verticesCount = _countof(tempVertices);
        indexCount = _countof(tempIndices);

        if (verticesCount >= 3 && indexCount >= 3) {
            nameVertices = new GameApp::VertexPosColor[verticesCount];
            nameIndices = new WORD[indexCount];
            memcpy(nameVertices, tempVertices, sizeof(tempVertices));
            memcpy(nameIndices, tempIndices, sizeof(tempIndices));
        }
        else {
            // 未粘贴完整数据时用占位三角形
            verticesCount = _countof(fallbackVerts);
            indexCount = _countof(fallbackIdx);
            nameVertices = new GameApp::VertexPosColor[verticesCount];
            nameIndices = new WORD[indexCount];
            memcpy(nameVertices, fallbackVerts, sizeof(fallbackVerts));
            memcpy(nameIndices, fallbackIdx, sizeof(fallbackIdx));
        }
    }
    break;

    case 1: // ===== 王 =====
    {
        static const GameApp::VertexPosColor tempVertices[] = {
   { XMFLOAT3(-19.35, -24.43, 3.495), XMFLOAT4(0.89, 0.44, 0.77, 1.0f) },
    { XMFLOAT3(-19.35, -21.19, 3.495), XMFLOAT4(0.76, 0.1, 0.77, 1.0f) },
    { XMFLOAT3(-19.35, -21.19, 0), XMFLOAT4(0.16, 0.83, 0.4, 1.0f) },
    { XMFLOAT3(-19.35, -24.43, 0), XMFLOAT4(0.5, 0.28, 0.74, 1.0f) },
    { XMFLOAT3(5.81, -21.19, 0), XMFLOAT4(0.06, 0.51, 0.31, 1.0f) },
    { XMFLOAT3(5.81, -21.19, 3.495), XMFLOAT4(0.49, 0.67, 0.79, 1.0f) },
    { XMFLOAT3(5.81, -24.43, 3.495), XMFLOAT4(0.51, 0.88, 0.51, 1.0f) },
    { XMFLOAT3(5.81, -24.43, 0), XMFLOAT4(0.75, 0.82, 0.86, 1.0f) },
    { XMFLOAT3(4.39, -1.33, 3.495), XMFLOAT4(0.57, 0.89, 0.54, 1.0f) },
    { XMFLOAT3(4.39, -1.33, 0), XMFLOAT4(0.16, 0.89, 0.28, 1.0f) },
    { XMFLOAT3(-5.11, -21.19, 3.495), XMFLOAT4(0.63, 0.88, 0.09, 1.0f) },
    { XMFLOAT3(-8.59, -21.19, 3.495), XMFLOAT4(0.98, 0.02, 0.05, 1.0f) },
    { XMFLOAT3(-8.59, -4.61, 0), XMFLOAT4(0.95, 0.19, 0.9, 1.0f) },
    { XMFLOAT3(-8.59, -21.19, 0), XMFLOAT4(0.47, 0.55, 0.09, 1.0f) },
    { XMFLOAT3(-5.11, -21.19, 0), XMFLOAT4(0.47, 0.1, 0.67, 1.0f) },
    { XMFLOAT3(4.39, -4.61, 0), XMFLOAT4(0.73, 0.4, 0.19, 1.0f) },
    { XMFLOAT3(4.39, -4.61, 3.495), XMFLOAT4(0.37, 0.9, 0.32, 1.0f) },
    { XMFLOAT3(-5.11, -4.61, 0), XMFLOAT4(0.93, 0.62, 0.19, 1.0f) },
    { XMFLOAT3(3.31, -14.11, 0), XMFLOAT4(0.23, 0.45, 0.34, 1.0f) },
    { XMFLOAT3(3.31, -10.85, 0), XMFLOAT4(0.01, 0.46, 0.8, 1.0f) },
    { XMFLOAT3(3.31, -10.85, 3.495), XMFLOAT4(0.79, 0.79, 0.52, 1.0f) },
    { XMFLOAT3(-8.59, -14.11, 0), XMFLOAT4(0.27, 0.18, 0.26, 1.0f) },
    { XMFLOAT3(-8.59, -10.85, 0), XMFLOAT4(0.19, 0.27, 0.48, 1.0f) },
    { XMFLOAT3(-8.59, -10.85, 3.495), XMFLOAT4(0.51, 0.22, 0.28, 1.0f) },
    { XMFLOAT3(-8.59, -4.61, 3.495), XMFLOAT4(0.83, 0.08, 0.0, 1.0f) },
    { XMFLOAT3(-5.11, -4.61, 3.495), XMFLOAT4(0.94, 0.8, 0.36, 1.0f) },
    { XMFLOAT3(-5.11, -10.85, 0), XMFLOAT4(0.64, 0.14, 0.42, 1.0f) },
    { XMFLOAT3(-8.59, -14.11, 3.495), XMFLOAT4(0.16, 0.5, 0.88, 1.0f) },
    { XMFLOAT3(-5.11, -14.11, 3.495), XMFLOAT4(0.4, 0.55, 0.98, 1.0f) },
    { XMFLOAT3(-5.11, -14.11, 0), XMFLOAT4(0.69, 0.37, 0.69, 1.0f) },
    { XMFLOAT3(-5.11, -10.85, 3.495), XMFLOAT4(0.37, 0.77, 0.42, 1.0f) },
    { XMFLOAT3(-18.03, -4.61, 3.495), XMFLOAT4(0.37, 0.92, 0.42, 1.0f) },
    { XMFLOAT3(-18.03, -4.61, 0), XMFLOAT4(0.48, 0.49, 0.54, 1.0f) },
    { XMFLOAT3(3.31, -14.11, 3.495), XMFLOAT4(0.19, 0.52, 0.46, 1.0f) },
    { XMFLOAT3(-18.03, -1.33, 3.495), XMFLOAT4(0.31, 0.01, 0.5, 1.0f) },
    { XMFLOAT3(-16.73, -14.11, 3.495), XMFLOAT4(0.39, 0.28, 0.32, 1.0f) },
    { XMFLOAT3(-16.73, -14.11, 0), XMFLOAT4(0.36, 0.5, 0.81, 1.0f) },
    { XMFLOAT3(-16.73, -10.85, 0), XMFLOAT4(0.37, 0.45, 0.59, 1.0f) },
    { XMFLOAT3(-16.73, -10.85, 3.495), XMFLOAT4(0.76, 0.74, 0.05, 1.0f) },
    { XMFLOAT3(-18.03, -1.33, 0), XMFLOAT4(0.98, 0.1, 0.58, 1.0f) },

        };
        static const WORD tempIndices[] = {
   2,1,0,
    3,2,0,
    6,5,4,
    7,6,4,
    10,0,11,
    6,10,5,
    14,3,7,
    14,7,4,
    16,25,8,
    9,17,15,
    25,16,15,
    8,9,15,
    16,8,15,
    1,2,13,
    11,1,13,
    23,22,12,
    24,23,12,
    0,6,7,
    3,0,7,
    17,12,22,
    26,17,22,
    11,13,21,
    27,11,21,
    14,10,28,
    29,14,28,
    23,24,25,
    30,23,25,
    31,24,12,
    32,31,12,
    20,19,18,
    33,20,18,
    10,14,4,
    5,10,4,
    24,31,34,
    25,34,8,
    34,25,24,
    30,26,19,
    20,30,19,
    15,17,25,
    21,36,35,
    27,21,35,
    37,22,23,
    38,37,23,
    18,29,28,
    33,18,28,
    25,17,26,
    30,25,26,
    23,27,35,
    23,35,38,
    27,23,30,
    30,28,27,
    28,30,20,
    33,28,20,
    35,36,37,
    38,35,37,
    31,32,39,
    34,31,39,
    3,14,13,
    3,13,2,
    12,39,32,
    39,17,9,
    17,39,12,
    13,14,29,
    21,13,29,
    9,34,39,
    34,9,8,
    11,0,1,
    0,10,6,
    22,37,36,
    22,29,26,
    26,18,19,
    26,29,18,
    22,21,29,
    21,22,36,
    27,28,10,
    11,27,10,

        };
        verticesCount = _countof(tempVertices);
        indexCount = _countof(tempIndices);
        nameVertices = new GameApp::VertexPosColor[verticesCount];
        nameIndices = new WORD[indexCount];
        memcpy(nameVertices, tempVertices, sizeof(tempVertices));
        memcpy(nameIndices, tempIndices, sizeof(tempIndices));
    }
    break;

    case 2: // ===== 尚 =====
    {
        static const GameApp::VertexPosColor tempVertices[] = {
   { XMFLOAT3(-12.76, -27.03, 0), XMFLOAT4(0.18, 0.74, 0.82, 1.0f) },
    { XMFLOAT3(-12.76, -27.03, 4.465), XMFLOAT4(0.99, 0.19, 0.71, 1.0f) },
    { XMFLOAT3(-16.06, -27.03, 4.465), XMFLOAT4(0.87, 0.47, 0.73, 1.0f) },
    { XMFLOAT3(-16.06, -27.03, 0), XMFLOAT4(0.88, 0.93, 0.63, 1.0f) },
    { XMFLOAT3(2.011, -2.535, 0), XMFLOAT4(0.43, 0.96, 0.59, 1.0f) },
    { XMFLOAT3(2.46, -1.55, 0), XMFLOAT4(0.88, 0.63, 0.56, 1.0f) },
    { XMFLOAT3(2.46, -1.55, 4.465), XMFLOAT4(0.93, 0.69, 0.8, 1.0f) },
    { XMFLOAT3(-10.36, -13.99, 0), XMFLOAT4(0.24, 0.15, 0.96, 1.0f) },
    { XMFLOAT3(0.895, -4.642, 0), XMFLOAT4(0.95, 0.37, 0.03, 1.0f) },
    { XMFLOAT3(-13, -8.65, 0), XMFLOAT4(0.46, 0.6, 0.96, 1.0f) },
    { XMFLOAT3(0.279, -5.68, 0), XMFLOAT4(0.88, 0.57, 0.06, 1.0f) },
    { XMFLOAT3(0.279, -5.68, 4.465), XMFLOAT4(0.79, 0.76, 0.39, 1.0f) },
    { XMFLOAT3(0.895, -4.642, 4.465), XMFLOAT4(0.26, 0.95, 0.53, 1.0f) },
    { XMFLOAT3(1.481, -3.58, 0), XMFLOAT4(0.74, 0.18, 0.47, 1.0f) },
    { XMFLOAT3(-1.44, -23.83, 0), XMFLOAT4(0.09, 0.86, 0.3, 1.0f) },
    { XMFLOAT3(1.481, -3.58, 4.465), XMFLOAT4(0.84, 0.21, 0.11, 1.0f) },
    { XMFLOAT3(-10.36, -13.99, 4.465), XMFLOAT4(0.79, 0.77, 0.74, 1.0f) },
    { XMFLOAT3(-13, -8.65, 4.465), XMFLOAT4(0.66, 0.46, 0.92, 1.0f) },
    { XMFLOAT3(0.51, -23.878, 0), XMFLOAT4(0.75, 0.52, 0.31, 1.0f) },
    { XMFLOAT3(0.51, -23.878, 4.465), XMFLOAT4(0.98, 0.72, 0.56, 1.0f) },
    { XMFLOAT3(-1.44, -23.83, 4.465), XMFLOAT4(0.9, 0.15, 0.47, 1.0f) },
    { XMFLOAT3(1.058, -23.876, 0), XMFLOAT4(0.49, 0.12, 0.94, 1.0f) },
    { XMFLOAT3(1.058, -23.876, 4.465), XMFLOAT4(0.71, 0.36, 0.29, 1.0f) },
    { XMFLOAT3(1.499, -23.867, 0), XMFLOAT4(0.5, 0.92, 0.98, 1.0f) },
    { XMFLOAT3(-0.111, -23.871, 0), XMFLOAT4(0.86, 0.25, 0.69, 1.0f) },
    { XMFLOAT3(2.011, -2.535, 4.465), XMFLOAT4(0.95, 0.11, 0.59, 1.0f) },
    { XMFLOAT3(-0.772, -23.855, 0), XMFLOAT4(0.97, 0.66, 0.02, 1.0f) },
    { XMFLOAT3(-0.772, -23.855, 4.465), XMFLOAT4(0.41, 0.31, 0.96, 1.0f) },
    { XMFLOAT3(5.78, -2.69, 0), XMFLOAT4(0.78, 0.19, 0.26, 1.0f) },
    { XMFLOAT3(-0.111, -23.871, 4.465), XMFLOAT4(0.03, 0.64, 0.7, 1.0f) },
    { XMFLOAT3(1.8, -23.85, 0), XMFLOAT4(0.73, 0.25, 0.29, 1.0f) },
    { XMFLOAT3(5.135, -3.784, 0), XMFLOAT4(0.16, 0.3, 0.59, 1.0f) },
    { XMFLOAT3(4.469, -4.869, 0), XMFLOAT4(0.77, 0.33, 0.52, 1.0f) },
    { XMFLOAT3(3.793, -5.92, 0), XMFLOAT4(0.45, 0.83, 0.92, 1.0f) },
    { XMFLOAT3(3.118, -6.911, 0), XMFLOAT4(0.63, 0.68, 0.43, 1.0f) },
    { XMFLOAT3(2.456, -7.816, 0), XMFLOAT4(0.56, 0.87, 0.69, 1.0f) },
    { XMFLOAT3(1.499, -23.867, 4.465), XMFLOAT4(0.26, 0.02, 0.61, 1.0f) },
    { XMFLOAT3(2.36, -12.07, 0), XMFLOAT4(0.89, 0.57, 0.8, 1.0f) },
    { XMFLOAT3(-0.94, -7.51, 4.465), XMFLOAT4(0.12, 0.97, 0.63, 1.0f) },
    { XMFLOAT3(-0.94, -7.51, 0), XMFLOAT4(0.25, 0.34, 0.11, 1.0f) },
    { XMFLOAT3(-0.341, -6.65, 0), XMFLOAT4(0.7, 0.32, 0.16, 1.0f) },
    { XMFLOAT3(-0.341, -6.65, 4.465), XMFLOAT4(0.27, 0.67, 0.64, 1.0f) },
    { XMFLOAT3(1.987, -23.839, 0), XMFLOAT4(0.05, 0.41, 0.37, 1.0f) },
    { XMFLOAT3(2.132, -23.804, 0), XMFLOAT4(0.05, 0.1, 0.08, 1.0f) },
    { XMFLOAT3(2.456, -7.816, 4.465), XMFLOAT4(0.98, 0.97, 0.64, 1.0f) },
    { XMFLOAT3(5.6, -8.97, 0), XMFLOAT4(0.53, 0.51, 0.9, 1.0f) },
    { XMFLOAT3(-0.12, -13.99, 4.465), XMFLOAT4(0.8, 0.35, 0.62, 1.0f) },
    { XMFLOAT3(-0.12, -13.99, 0), XMFLOAT4(0.86, 0.24, 0.02, 1.0f) },
    { XMFLOAT3(2.237, -23.74, 0), XMFLOAT4(0.96, 0.96, 0.28, 1.0f) },
    { XMFLOAT3(1.82, -8.61, 0), XMFLOAT4(0.45, 0.44, 0.59, 1.0f) },
    { XMFLOAT3(3.118, -6.911, 4.465), XMFLOAT4(0.68, 0.19, 0.03, 1.0f) },
    { XMFLOAT3(-3.62, -8.97, 0), XMFLOAT4(0.03, 0.8, 0.54, 1.0f) },
    { XMFLOAT3(2.308, -23.643, 0), XMFLOAT4(0.25, 0.13, 0.82, 1.0f) },
    { XMFLOAT3(-0.12, -22.35, 0), XMFLOAT4(0.46, 0.35, 0.26, 1.0f) },
    { XMFLOAT3(-0.12, -22.35, 4.465), XMFLOAT4(0.78, 0.77, 0.26, 1.0f) },
    { XMFLOAT3(-7.4, -22.35, 4.465), XMFLOAT4(0.87, 0.81, 0.95, 1.0f) },
    { XMFLOAT3(-7.4, -22.35, 0), XMFLOAT4(0.71, 0.54, 0.91, 1.0f) },
    { XMFLOAT3(-7, -8.97, 0), XMFLOAT4(0.94, 0.7, 0.3, 1.0f) },
    { XMFLOAT3(3.793, -5.92, 4.465), XMFLOAT4(0.08, 0.8, 0.0, 1.0f) },
    { XMFLOAT3(-7, -1.09, 0), XMFLOAT4(0.83, 0.37, 0.53, 1.0f) },
    { XMFLOAT3(-3.62, -1.09, 0), XMFLOAT4(0.81, 0.67, 0.7, 1.0f) },
    { XMFLOAT3(1.8, -23.85, 4.465), XMFLOAT4(0.31, 0.99, 0.38, 1.0f) },
    { XMFLOAT3(2.348, -23.507, 0), XMFLOAT4(0.38, 0.96, 0.88, 1.0f) },
    { XMFLOAT3(-3.2, -16.73, 0), XMFLOAT4(0.47, 0.63, 0.21, 1.0f) },
    { XMFLOAT3(-3.2, -19.59, 0), XMFLOAT4(0.28, 0.41, 0.36, 1.0f) },
    { XMFLOAT3(1.987, -23.839, 4.465), XMFLOAT4(0.56, 0.8, 0.07, 1.0f) },
    { XMFLOAT3(-3.2, -19.59, 4.465), XMFLOAT4(0.84, 0.33, 0.92, 1.0f) },
    { XMFLOAT3(-3.2, -16.73, 4.465), XMFLOAT4(0.14, 0.58, 0.12, 1.0f) },
    { XMFLOAT3(-10.28, -6.381, 4.465), XMFLOAT4(0.15, 0.99, 0.7, 1.0f) },
    { XMFLOAT3(-10.28, -6.381, 0), XMFLOAT4(0.28, 0.22, 0.86, 1.0f) },
    { XMFLOAT3(-10.765, -5.476, 0), XMFLOAT4(0.9, 0.26, 0.04, 1.0f) },
    { XMFLOAT3(-10.765, -5.476, 4.465), XMFLOAT4(0.22, 0.39, 0.08, 1.0f) },
    { XMFLOAT3(-7.4, -16.73, 4.465), XMFLOAT4(0.48, 0.86, 0.97, 1.0f) },
    { XMFLOAT3(-7.4, -16.73, 0), XMFLOAT4(0.42, 0.39, 0.57, 1.0f) },
    { XMFLOAT3(5.78, -2.69, 4.465), XMFLOAT4(0.38, 0.91, 0.22, 1.0f) },
    { XMFLOAT3(2.132, -23.804, 4.465), XMFLOAT4(0.58, 0.3, 0.0, 1.0f) },
    { XMFLOAT3(-11.335, -4.53, 0), XMFLOAT4(0.29, 0.01, 0.02, 1.0f) },
    { XMFLOAT3(-11.335, -4.53, 4.465), XMFLOAT4(0.58, 0.41, 0.27, 1.0f) },
    { XMFLOAT3(-7.4, -19.59, 0), XMFLOAT4(0.61, 0.11, 0.03, 1.0f) },
    { XMFLOAT3(-7.4, -19.59, 4.465), XMFLOAT4(0.5, 0.1, 0.68, 1.0f) },
    { XMFLOAT3(4.469, -4.869, 4.465), XMFLOAT4(0.65, 0.38, 0.12, 1.0f) },
    { XMFLOAT3(5.135, -3.784, 4.465), XMFLOAT4(0.71, 0.28, 0.12, 1.0f) },
    { XMFLOAT3(2.237, -23.74, 4.465), XMFLOAT4(0.66, 0.64, 0.34, 1.0f) },
    { XMFLOAT3(2.36, -23.33, 0), XMFLOAT4(0.81, 0.31, 0.36, 1.0f) },
    { XMFLOAT3(2.308, -23.643, 4.465), XMFLOAT4(0.08, 0.27, 0.99, 1.0f) },
    { XMFLOAT3(2.36, -12.07, 4.465), XMFLOAT4(0.62, 0.55, 0.47, 1.0f) },
    { XMFLOAT3(-11.968, -3.577, 0), XMFLOAT4(0.15, 0.28, 0.46, 1.0f) },
    { XMFLOAT3(2.348, -23.507, 4.465), XMFLOAT4(0.09, 0.57, 0.3, 1.0f) },
    { XMFLOAT3(-11.968, -3.577, 4.465), XMFLOAT4(0.92, 0.44, 0.78, 1.0f) },
    { XMFLOAT3(5.6, -23.41, 0), XMFLOAT4(0.11, 0.44, 0.92, 1.0f) },
    { XMFLOAT3(5.573, -24.136, 0), XMFLOAT4(0.83, 0.72, 0.37, 1.0f) },
    { XMFLOAT3(-12.644, -2.653, 0), XMFLOAT4(0.27, 0.32, 0.42, 1.0f) },
    { XMFLOAT3(2.36, -23.33, 4.465), XMFLOAT4(0.99, 0.32, 0.94, 1.0f) },
    { XMFLOAT3(-12.644, -2.653, 4.465), XMFLOAT4(0.3, 0.96, 0.86, 1.0f) },
    { XMFLOAT3(-13.34, -1.79, 0), XMFLOAT4(0.25, 0.76, 0.65, 1.0f) },
    { XMFLOAT3(-13.34, -1.79, 4.465), XMFLOAT4(0.26, 0.59, 0.3, 1.0f) },
    { XMFLOAT3(5.6, -8.97, 4.465), XMFLOAT4(0.65, 0.94, 0.65, 1.0f) },
    { XMFLOAT3(5.6, -23.41, 4.465), XMFLOAT4(0.66, 0.86, 0.69, 1.0f) },
    { XMFLOAT3(1.82, -8.61, 4.465), XMFLOAT4(0.09, 0.87, 0.11, 1.0f) },
    { XMFLOAT3(-16.28, -3.01, 0), XMFLOAT4(0.03, 0.1, 0.56, 1.0f) },
    { XMFLOAT3(-13.344, -7.817, 0), XMFLOAT4(0.96, 0.74, 0.98, 1.0f) },
    { XMFLOAT3(-16.28, -3.01, 4.465), XMFLOAT4(0.14, 0.54, 0.01, 1.0f) },
    { XMFLOAT3(5.573, -24.136, 4.465), XMFLOAT4(0.57, 0.07, 0.87, 1.0f) },
    { XMFLOAT3(-3.62, -8.97, 4.465), XMFLOAT4(0.79, 0.29, 0.42, 1.0f) },
    { XMFLOAT3(-13.801, -6.886, 0), XMFLOAT4(0.62, 0.67, 0.07, 1.0f) },
    { XMFLOAT3(5.482, -24.76, 0), XMFLOAT4(0.07, 0.74, 0.15, 1.0f) },
    { XMFLOAT3(5.315, -25.288, 0), XMFLOAT4(0.15, 0.42, 0.9, 1.0f) },
    { XMFLOAT3(-13.344, -7.817, 4.465), XMFLOAT4(0.3, 0.92, 0.14, 1.0f) },
    { XMFLOAT3(-7, -8.97, 4.465), XMFLOAT4(0.25, 0.92, 0.53, 1.0f) },
    { XMFLOAT3(5.058, -25.727, 0), XMFLOAT4(0.4, 0.77, 0.11, 1.0f) },
    { XMFLOAT3(4.697, -26.085, 0), XMFLOAT4(0.85, 0.16, 0.2, 1.0f) },
    { XMFLOAT3(4.22, -26.37, 0), XMFLOAT4(0.37, 0.51, 0.14, 1.0f) },
    { XMFLOAT3(-14.348, -5.898, 0), XMFLOAT4(0.56, 0.29, 0.13, 1.0f) },
    { XMFLOAT3(3.669, -26.594, 0), XMFLOAT4(0.34, 0.84, 0.67, 1.0f) },
    { XMFLOAT3(5.058, -25.727, 4.465), XMFLOAT4(0.89, 0.59, 0.24, 1.0f) },
    { XMFLOAT3(5.315, -25.288, 4.465), XMFLOAT4(0.93, 0.31, 0.65, 1.0f) },
    { XMFLOAT3(5.482, -24.76, 4.465), XMFLOAT4(0.87, 0.86, 0.37, 1.0f) },
    { XMFLOAT3(-14.959, -4.894, 0), XMFLOAT4(0.84, 0.71, 0.17, 1.0f) },
    { XMFLOAT3(0.601, -26.943, 4.465), XMFLOAT4(0.03, 0.84, 0.84, 1.0f) },
    { XMFLOAT3(1.504, -26.915, 4.465), XMFLOAT4(0.28, 0.5, 0.71, 1.0f) },
    { XMFLOAT3(2.315, -26.855, 4.465), XMFLOAT4(0.98, 0.18, 0.69, 1.0f) },
    { XMFLOAT3(3.036, -26.751, 4.465), XMFLOAT4(0.67, 0.07, 0.54, 1.0f) },
    { XMFLOAT3(3.669, -26.594, 4.465), XMFLOAT4(0.96, 0.15, 0.06, 1.0f) },
    { XMFLOAT3(3.036, -26.751, 0), XMFLOAT4(0.78, 0.2, 0.87, 1.0f) },
    { XMFLOAT3(4.22, -26.37, 4.465), XMFLOAT4(0.52, 0.09, 1.0, 1.0f) },
    { XMFLOAT3(2.315, -26.855, 0), XMFLOAT4(0.53, 0.25, 0.68, 1.0f) },
    { XMFLOAT3(-15.611, -3.918, 0), XMFLOAT4(0.89, 0.35, 0.1, 1.0f) },
    { XMFLOAT3(4.697, -26.085, 4.465), XMFLOAT4(0.75, 0.91, 0.01, 1.0f) },
    { XMFLOAT3(1.504, -26.915, 0), XMFLOAT4(0.87, 0.93, 0.65, 1.0f) },
    { XMFLOAT3(0.601, -26.943, 0), XMFLOAT4(0.11, 0.19, 0.8, 1.0f) },
    { XMFLOAT3(-1.21, -24.282, 4.465), XMFLOAT4(0.65, 0.2, 0.82, 1.0f) },
    { XMFLOAT3(-7, -1.09, 4.465), XMFLOAT4(0.97, 0.23, 0.57, 1.0f) },
    { XMFLOAT3(-3.62, -1.09, 4.465), XMFLOAT4(0.72, 0.4, 0.81, 1.0f) },
    { XMFLOAT3(-13.801, -6.886, 4.465), XMFLOAT4(0.06, 0.64, 0.48, 1.0f) },
    { XMFLOAT3(-14.348, -5.898, 4.465), XMFLOAT4(0.98, 0.94, 0.85, 1.0f) },
    { XMFLOAT3(-14.959, -4.894, 4.465), XMFLOAT4(0.76, 0.01, 0.11, 1.0f) },
    { XMFLOAT3(-1.21, -24.282, 0), XMFLOAT4(0.73, 0.11, 0.32, 1.0f) },
    { XMFLOAT3(-9.9, -7.21, 0), XMFLOAT4(0.79, 0.43, 0.76, 1.0f) },
    { XMFLOAT3(-15.611, -3.918, 4.465), XMFLOAT4(0.79, 0.99, 0.48, 1.0f) },
    { XMFLOAT3(-12.76, -12.07, 0), XMFLOAT4(0.68, 0.49, 0.86, 1.0f) },
    { XMFLOAT3(-7.4, -24.09, 4.465), XMFLOAT4(0.25, 0.51, 0.69, 1.0f) },
    { XMFLOAT3(-7.4, -24.09, 0), XMFLOAT4(0.14, 0.9, 0.21, 1.0f) },
    { XMFLOAT3(-16.06, -8.97, 0), XMFLOAT4(0.79, 0.96, 0.87, 1.0f) },
    { XMFLOAT3(-9.9, -7.21, 4.465), XMFLOAT4(0.29, 0.33, 0.51, 1.0f) },
    { XMFLOAT3(-0.48, -26.456, 0), XMFLOAT4(0.7, 0.66, 0.8, 1.0f) },
    { XMFLOAT3(-0.4, -26.95, 0), XMFLOAT4(0.36, 0.41, 0.12, 1.0f) },
    { XMFLOAT3(-0.4, -26.95, 4.465), XMFLOAT4(0.76, 0.38, 0.24, 1.0f) },
    { XMFLOAT3(-0.48, -26.456, 4.465), XMFLOAT4(0.17, 0.49, 0.08, 1.0f) },
    { XMFLOAT3(-16.06, -8.97, 4.465), XMFLOAT4(0.87, 0.85, 0.55, 1.0f) },
    { XMFLOAT3(-0.612, -25.914, 0), XMFLOAT4(0.7, 0.47, 0.72, 1.0f) },
    { XMFLOAT3(-12.76, -12.07, 4.465), XMFLOAT4(0.48, 0.12, 0.5, 1.0f) },
    { XMFLOAT3(-0.612, -25.914, 4.465), XMFLOAT4(0.2, 1.0, 0.85, 1.0f) },
    { XMFLOAT3(-0.785, -25.352, 0), XMFLOAT4(0.6, 0.1, 0.54, 1.0f) },
    { XMFLOAT3(-0.785, -25.352, 4.465), XMFLOAT4(0.46, 0.78, 1.0, 1.0f) },
    { XMFLOAT3(-0.988, -24.799, 4.465), XMFLOAT4(0.31, 0.25, 0.35, 1.0f) },
    { XMFLOAT3(-0.988, -24.799, 0), XMFLOAT4(0.69, 0.27, 0.29, 1.0f) },
    { XMFLOAT3(-10.36, -24.09, 4.465), XMFLOAT4(0.29, 0.98, 0.5, 1.0f) },
    { XMFLOAT3(-10.36, -24.09, 0), XMFLOAT4(0.75, 0.71, 0.82, 1.0f) },

        };
        static const WORD tempIndices[] = {
   2,1,0,
    3,2,0,
    5,31,28,
    11,10,8,
    12,11,8,
    17,137,9,
    137,17,143,
    10,34,8,
    4,32,31,
    19,18,21,
    22,19,21,
    12,8,13,
    15,12,13,
    27,26,24,
    29,27,24,
    128,30,23,
    13,4,25,
    15,13,25,
    33,8,34,
    13,33,32,
    32,4,13,
    35,40,49,
    10,35,34,
    8,33,13,
    31,5,4,
    40,11,41,
    11,40,10,
    45,37,89,
    24,19,29,
    19,24,18,
    12,50,11,
    109,52,48,
    47,54,46,
    50,34,35,
    44,50,35,
    118,19,22,
    55,54,53,
    56,55,53,
    54,47,53,
    58,33,34,
    50,58,34,
    22,21,23,
    36,22,23,
    52,105,62,
    52,106,105,
    57,60,59,
    57,51,60,
    51,57,139,
    49,39,38,
    66,64,63,
    67,66,63,
    36,23,30,
    61,36,30,
    37,51,139,
    70,69,68,
    71,70,68,
    72,67,63,
    73,72,63,
    77,76,70,
    71,77,70,
    61,30,42,
    65,61,42,
    61,120,119,
    61,119,36,
    78,64,66,
    79,78,66,
    65,42,43,
    75,65,43,
    6,81,25,
    25,80,15,
    12,58,50,
    41,44,98,
    15,58,12,
    58,15,80,
    80,25,81,
    81,6,74,
    80,32,33,
    58,80,33,
    120,61,65,
    75,43,48,
    82,75,48,
    81,31,32,
    80,81,32,
    82,48,52,
    84,82,52,
    51,37,45,
    85,97,92,
    88,86,76,
    77,88,76,
    74,28,31,
    81,74,31,
    75,122,121,
    84,52,62,
    87,84,62,
    90,62,105,
    89,62,90,
    62,89,83,
    37,83,89,
    93,91,86,
    88,93,86,
    85,103,96,
    28,74,6,
    87,116,84,
    87,62,83,
    92,87,83,
    40,39,49,
    40,35,10,
    95,94,91,
    93,95,91,
    85,92,37,
    92,83,37,
    44,11,50,
    101,99,94,
    95,101,94,
    97,85,96,
    97,87,92,
    116,87,102,
    102,87,97,
    100,70,104,
    137,100,9,
    102,90,105,
    116,102,105,
    107,9,100,
    108,150,148,
    112,86,117,
    104,76,112,
    97,89,90,
    102,97,90,
    96,45,89,
    115,84,116,
    84,115,114,
    114,82,84,
    119,22,36,
    65,121,120,
    121,65,75,
    122,75,82,
    82,124,122,
    82,127,124,
    127,82,114,
    89,97,96,
    108,103,150,
    103,108,131,
    132,103,131,
    107,100,104,
    133,107,104,
    96,51,45,
    22,119,118,
    113,48,43,
    43,123,113,
    48,113,111,
    123,43,42,
    42,125,123,
    128,149,129,
    125,42,30,
    48,111,110,
    48,110,109,
    52,109,106,
    38,98,49,
    133,104,112,
    134,133,112,
    134,112,117,
    135,134,117,
    119,128,129,
    118,119,129,
    135,117,126,
    138,135,126,
    126,94,99,
    126,91,94,
    91,126,117,
    86,91,117,
    86,112,76,
    76,104,70,
    69,100,137,
    100,69,70,
    56,140,55,
    27,130,20,
    136,26,14,
    30,128,125,
    120,125,128,
    119,120,128,
    126,99,101,
    138,126,101,
    49,98,44,
    35,49,44,
    140,56,141,
    121,123,125,
    120,121,125,
    128,18,24,
    79,72,73,
    78,79,73,
    139,142,3,
    29,154,27,
    27,154,130,
    19,153,29,
    122,113,123,
    121,122,123,
    137,143,68,
    69,137,68,
    60,51,103,
    132,60,103,
    146,145,144,
    147,146,144,
    124,111,113,
    122,124,113,
    108,142,57,
    155,24,26,
    128,21,18,
    128,23,21,
    127,110,111,
    124,127,111,
    142,139,57,
    2,3,142,
    148,2,142,
    66,46,54,
    46,66,67,
    64,47,63,
    114,109,110,
    127,114,110,
    147,144,149,
    151,147,149,
    66,55,79,
    66,54,55,
    108,57,59,
    131,108,59,
    150,139,1,
    47,64,53,
    7,63,47,
    63,7,73,
    114,115,106,
    109,114,106,
    55,140,156,
    72,16,67,
    79,16,72,
    157,16,156,
    16,157,7,
    151,149,152,
    153,151,152,
    64,56,53,
    56,64,78,
    115,116,105,
    106,115,105,
    147,118,146,
    107,17,9,
    145,146,118,
    16,47,46,
    47,16,7,
    118,147,151,
    56,157,141,
    78,157,56,
    7,78,73,
    151,19,118,
    142,108,148,
    38,39,40,
    41,38,40,
    153,152,155,
    154,153,155,
    29,153,154,
    19,151,153,
    130,155,136,
    144,129,149,
    128,24,152,
    37,150,85,
    150,37,139,
    152,24,155,
    96,103,51,
    130,154,155,
    129,144,145,
    155,26,136,
    128,152,149,
    130,136,14,
    20,130,14,
    118,129,145,
    156,79,55,
    103,85,150,
    0,139,3,
    140,141,156,
    6,5,28,
    157,78,7,
    67,16,46,
    139,0,1,
    20,14,26,
    27,20,26,
    59,60,132,
    131,59,132,
    25,4,5,
    6,25,5,
    141,157,156,
    41,98,38,
    11,44,41,
    107,68,143,
    71,107,133,
    107,71,68,
    138,101,95,
    138,93,135,
    133,77,71,
    77,133,134,
    134,88,77,
    88,134,135,
    135,93,88,
    93,138,95,
    150,2,148,
    2,150,1,
    16,79,156,
    107,143,17,

        };
        verticesCount = _countof(tempVertices);
        indexCount = _countof(tempIndices);
        nameVertices = new GameApp::VertexPosColor[verticesCount];
        nameIndices = new WORD[indexCount];
        memcpy(nameVertices, tempVertices, sizeof(tempVertices));
        memcpy(nameIndices, tempIndices, sizeof(tempIndices));
    }
    break;

    case 3: // ===== 秦 =====
    {
        static const GameApp::VertexPosColor tempVertices[] = {
  { XMFLOAT3(-13.042, -16.738, 0), XMFLOAT4(0.42, 0.23, 0.36, 1.0f) },
    { XMFLOAT3(-12.994, -16.953, 0), XMFLOAT4(0.01, 0.63, 0.68, 1.0f) },
    { XMFLOAT3(-12.994, -16.953, 7.374), XMFLOAT4(0.27, 0.54, 0.85, 1.0f) },
    { XMFLOAT3(-13.042, -16.738, 7.374), XMFLOAT4(0.67, 0.43, 0.27, 1.0f) },
    { XMFLOAT3(-13.099, -16.52, 0), XMFLOAT4(0.68, 0.92, 0.63, 1.0f) },
    { XMFLOAT3(-13.099, -16.52, 7.374), XMFLOAT4(0.1, 0.67, 0.35, 1.0f) },
    { XMFLOAT3(-12.325, -17.357, 0), XMFLOAT4(0.07, 0.32, 0.78, 1.0f) },
    { XMFLOAT3(-12.325, -17.357, 7.374), XMFLOAT4(0.7, 0.78, 1.0, 1.0f) },
    { XMFLOAT3(-16.33, -18.56, 0), XMFLOAT4(0.6, 0.26, 0.65, 1.0f) },
    { XMFLOAT3(-16.33, -18.56, 7.374), XMFLOAT4(0.34, 0.97, 0.94, 1.0f) },
    { XMFLOAT3(-15.119, -17.704, 0), XMFLOAT4(0.3, 0.09, 0.99, 1.0f) },
    { XMFLOAT3(-15.119, -17.704, 7.374), XMFLOAT4(0.48, 0.84, 0.66, 1.0f) },
    { XMFLOAT3(-15.637, -18.081, 7.374), XMFLOAT4(0.43, 0.96, 0.7, 1.0f) },
    { XMFLOAT3(-15.637, -18.081, 0), XMFLOAT4(0.32, 0.55, 0.34, 1.0f) },
    { XMFLOAT3(-14.617, -17.315, 0), XMFLOAT4(0.07, 0.38, 0.99, 1.0f) },
    { XMFLOAT3(-14.617, -17.315, 7.374), XMFLOAT4(0.04, 0.86, 0.97, 1.0f) },
    { XMFLOAT3(-14.134, -16.916, 0), XMFLOAT4(0.22, 0.61, 0.41, 1.0f) },
    { XMFLOAT3(-14.134, -16.916, 7.374), XMFLOAT4(0.75, 0.31, 0.59, 1.0f) },
    { XMFLOAT3(-13.671, -16.509, 0), XMFLOAT4(0.26, 0.31, 0.75, 1.0f) },
    { XMFLOAT3(-13.671, -16.509, 7.374), XMFLOAT4(0.97, 0.09, 0.92, 1.0f) },
    { XMFLOAT3(-16.17, -18.44, 7.374), XMFLOAT4(0.51, 0.5, 0.87, 1.0f) },
    { XMFLOAT3(-16.17, -18.44, 0), XMFLOAT4(0.74, 0.44, 0.65, 1.0f) },
    { XMFLOAT3(-11.97, -21.58, 0), XMFLOAT4(0.7, 0.89, 0.14, 1.0f) },
    { XMFLOAT3(-11.97, -21.58, 7.374), XMFLOAT4(0.47, 0.28, 0.51, 1.0f) },
    { XMFLOAT3(-16.33, -21.06, 0), XMFLOAT4(0.26, 0.2, 0.14, 1.0f) },
    { XMFLOAT3(-16.33, -21.06, 7.374), XMFLOAT4(0.64, 0.21, 0.98, 1.0f) },
    { XMFLOAT3(-12.943, -22.18, 0), XMFLOAT4(0.7, 0.78, 0.02, 1.0f) },
    { XMFLOAT3(-12.943, -22.18, 7.374), XMFLOAT4(0.2, 0.32, 0.44, 1.0f) },
    { XMFLOAT3(-15.472, -23.227, 0), XMFLOAT4(0.2, 0.26, 0.51, 1.0f) },
    { XMFLOAT3(-15.472, -23.227, 7.374), XMFLOAT4(0.74, 0.56, 0.57, 1.0f) },
    { XMFLOAT3(-14.128, -22.733, 0), XMFLOAT4(0.96, 0.88, 0.43, 1.0f) },
    { XMFLOAT3(-14.128, -22.733, 7.374), XMFLOAT4(0.36, 0.72, 0.75, 1.0f) },
    { XMFLOAT3(-11.807, -24.407, 0), XMFLOAT4(0.28, 0.3, 0.83, 1.0f) },
    { XMFLOAT3(-11.807, -24.407, 7.374), XMFLOAT4(0.18, 0.25, 0.87, 1.0f) },
    { XMFLOAT3(-10.522, -23.559, 0), XMFLOAT4(0.14, 0.77, 0.65, 1.0f) },
    { XMFLOAT3(-10.522, -23.559, 7.374), XMFLOAT4(0.28, 0.83, 0.47, 1.0f) },
    { XMFLOAT3(-9.43, -22.64, 0), XMFLOAT4(0.8, 0.15, 0.6, 1.0f) },
    { XMFLOAT3(-9.43, -22.64, 7.374), XMFLOAT4(0.91, 0.77, 0.9, 1.0f) },
    { XMFLOAT3(-9.19, -21.06, 0), XMFLOAT4(0.6, 0.43, 0.53, 1.0f) },
    { XMFLOAT3(-9.19, -21.06, 7.374), XMFLOAT4(0.43, 0.2, 0.92, 1.0f) },
    { XMFLOAT3(-9.19, -27, 0), XMFLOAT4(0.93, 0.47, 0.06, 1.0f) },
    { XMFLOAT3(-9.19, -27, 7.374), XMFLOAT4(0.09, 0.4, 0.19, 1.0f) },
    { XMFLOAT3(-16.346, -26.381, 0), XMFLOAT4(0.47, 0.57, 0.31, 1.0f) },
    { XMFLOAT3(-16.346, -26.381, 7.374), XMFLOAT4(0.94, 0.99, 0.45, 1.0f) },
    { XMFLOAT3(-14.766, -25.833, 0), XMFLOAT4(0.89, 0.25, 0.22, 1.0f) },
    { XMFLOAT3(-14.766, -25.833, 7.374), XMFLOAT4(0.77, 0.74, 0.03, 1.0f) },
    { XMFLOAT3(-13.237, -25.17, 0), XMFLOAT4(0.31, 0.8, 0.91, 1.0f) },
    { XMFLOAT3(-13.237, -25.17, 7.374), XMFLOAT4(0.99, 0.8, 0.31, 1.0f) },
    { XMFLOAT3(-19.689, -16.83, 0), XMFLOAT4(0.88, 0.77, 0.83, 1.0f) },
    { XMFLOAT3(-20.81, -17.42, 0), XMFLOAT4(0.27, 0.46, 0.55, 1.0f) },
    { XMFLOAT3(-20.81, -17.42, 7.374), XMFLOAT4(0.02, 0.32, 0.43, 1.0f) },
    { XMFLOAT3(-19.689, -16.83, 7.374), XMFLOAT4(0.29, 0.93, 0.57, 1.0f) },
    { XMFLOAT3(-19.012, -19.569, 0), XMFLOAT4(0.08, 0.33, 0.29, 1.0f) },
    { XMFLOAT3(-18.79, -20, 0), XMFLOAT4(0.52, 0.62, 0.4, 1.0f) },
    { XMFLOAT3(-18.79, -20, 7.374), XMFLOAT4(0.7, 0.62, 0.36, 1.0f) },
    { XMFLOAT3(-19.012, -19.569, 7.374), XMFLOAT4(0.04, 0.79, 0.37, 1.0f) },
    { XMFLOAT3(-19.305, -19.096, 0), XMFLOAT4(0.93, 0.12, 0.87, 1.0f) },
    { XMFLOAT3(-19.305, -19.096, 7.374), XMFLOAT4(0.6, 0.99, 0.45, 1.0f) },
    { XMFLOAT3(-19.65, -18.613, 0), XMFLOAT4(0.19, 0.92, 0.41, 1.0f) },
    { XMFLOAT3(-19.65, -18.613, 7.374), XMFLOAT4(0.82, 0.05, 0.2, 1.0f) },
    { XMFLOAT3(-20.029, -18.151, 0), XMFLOAT4(0.33, 0.25, 0.63, 1.0f) },
    { XMFLOAT3(-20.029, -18.151, 7.374), XMFLOAT4(0.9, 0.63, 0.22, 1.0f) },
    { XMFLOAT3(-20.421, -17.743, 0), XMFLOAT4(0.23, 0.29, 0.35, 1.0f) },
    { XMFLOAT3(-20.421, -17.743, 7.374), XMFLOAT4(0.85, 0.21, 0.5, 1.0f) },
    { XMFLOAT3(-18.363, -19.777, 0), XMFLOAT4(0.39, 0.76, 0.3, 1.0f) },
    { XMFLOAT3(-18.363, -19.777, 7.374), XMFLOAT4(0.07, 0.47, 0.5, 1.0f) },
    { XMFLOAT3(-17.943, -19.547, 0), XMFLOAT4(0.77, 0.29, 0.54, 1.0f) },
    { XMFLOAT3(-17.943, -19.547, 7.374), XMFLOAT4(0.23, 0.18, 0.81, 1.0f) },
    { XMFLOAT3(-17.53, -19.31, 0), XMFLOAT4(0.15, 0.23, 0.64, 1.0f) },
    { XMFLOAT3(-17.53, -19.31, 7.374), XMFLOAT4(0.58, 0.91, 0.46, 1.0f) },
    { XMFLOAT3(-17.123, -19.067, 0), XMFLOAT4(0.77, 0.61, 0.69, 1.0f) },
    { XMFLOAT3(-17.123, -19.067, 7.374), XMFLOAT4(0.64, 0.65, 0.7, 1.0f) },
    { XMFLOAT3(-16.723, -18.817, 0), XMFLOAT4(0.94, 0.79, 0.86, 1.0f) },
    { XMFLOAT3(-16.723, -18.817, 7.374), XMFLOAT4(0.51, 0.25, 0.77, 1.0f) },
    { XMFLOAT3(-18.435, -24.002, 0), XMFLOAT4(0.68, 0.58, 0.25, 1.0f) },
    { XMFLOAT3(-19.95, -24.26, 0), XMFLOAT4(0.53, 0.36, 0.97, 1.0f) },
    { XMFLOAT3(-19.95, -24.26, 7.374), XMFLOAT4(0.23, 0.23, 0.57, 1.0f) },
    { XMFLOAT3(-18.435, -24.002, 7.374), XMFLOAT4(0.43, 0.32, 0.75, 1.0f) },
    { XMFLOAT3(-16.926, -23.654, 0), XMFLOAT4(0.68, 0.76, 0.18, 1.0f) },
    { XMFLOAT3(-16.926, -23.654, 7.374), XMFLOAT4(0.8, 0.69, 0.34, 1.0f) },
    { XMFLOAT3(-18.184, -26.391, 0), XMFLOAT4(0.4, 0.14, 0.97, 1.0f) },
    { XMFLOAT3(-17.93, -26.8, 0), XMFLOAT4(0.87, 0.31, 0.15, 1.0f) },
    { XMFLOAT3(-17.93, -26.8, 7.374), XMFLOAT4(0.74, 0.99, 0.4, 1.0f) },
    { XMFLOAT3(-18.184, -26.391, 7.374), XMFLOAT4(0.78, 0.77, 0.85, 1.0f) },
    { XMFLOAT3(-18.494, -25.941, 0), XMFLOAT4(0.39, 0.81, 0.85, 1.0f) },
    { XMFLOAT3(-18.494, -25.941, 7.374), XMFLOAT4(0.27, 0.97, 0.42, 1.0f) },
    { XMFLOAT3(-18.842, -25.477, 0), XMFLOAT4(1.0, 0.62, 0.61, 1.0f) },
    { XMFLOAT3(-18.842, -25.477, 7.374), XMFLOAT4(0.12, 0.4, 0.14, 1.0f) },
    { XMFLOAT3(-19.213, -25.025, 0), XMFLOAT4(0.17, 0.85, 0.99, 1.0f) },
    { XMFLOAT3(-19.213, -25.025, 7.374), XMFLOAT4(0.57, 0.79, 0.68, 1.0f) },
    { XMFLOAT3(-19.588, -24.611, 0), XMFLOAT4(0.6, 0.9, 0.15, 1.0f) },
    { XMFLOAT3(-19.588, -24.611, 7.374), XMFLOAT4(0.12, 0.72, 0.04, 1.0f) },
    { XMFLOAT3(-5.93, -27, 0), XMFLOAT4(0.5, 0.32, 0.98, 1.0f) },
    { XMFLOAT3(-5.93, -27, 7.374), XMFLOAT4(0.07, 0.14, 0.49, 1.0f) },
    { XMFLOAT3(3.67, -3.22, 0), XMFLOAT4(0.06, 0.71, 0.71, 1.0f) },
    { XMFLOAT3(3.67, -5.8, 0), XMFLOAT4(0.56, 0.39, 0.9, 1.0f) },
    { XMFLOAT3(2.31, -7.02, 0), XMFLOAT4(0.96, 0.08, 0.18, 1.0f) },
    { XMFLOAT3(2.31, -9.46, 0), XMFLOAT4(0.66, 0.73, 0.26, 1.0f) },
    { XMFLOAT3(5.07, -10.7, 0), XMFLOAT4(0.13, 0.76, 0.51, 1.0f) },
    { XMFLOAT3(5.07, -13.32, 0), XMFLOAT4(0.53, 0.36, 0.49, 1.0f) },
    { XMFLOAT3(0.306, -14.164, 0), XMFLOAT4(0.29, 0.65, 0.95, 1.0f) },
    { XMFLOAT3(1.285, -14.951, 0), XMFLOAT4(0.58, 0.75, 0.83, 1.0f) },
    { XMFLOAT3(2.333, -15.675, 0), XMFLOAT4(0.05, 0.25, 0.12, 1.0f) },
    { XMFLOAT3(3.435, -16.329, 0), XMFLOAT4(0.13, 0.28, 0.22, 1.0f) },
    { XMFLOAT3(5.75, -17.4, 0), XMFLOAT4(0.87, 0.63, 0.88, 1.0f) },
    { XMFLOAT3(5.324, -17.75, 0), XMFLOAT4(0.91, 0.63, 0.89, 1.0f) },
    { XMFLOAT3(4.894, -18.149, 0), XMFLOAT4(0.37, 0.34, 0.09, 1.0f) },
    { XMFLOAT3(4.475, -18.578, 0), XMFLOAT4(0.5, 0.71, 0.21, 1.0f) },
    { XMFLOAT3(4.579, -16.906, 0), XMFLOAT4(0.88, 0.67, 0.93, 1.0f) },
    { XMFLOAT3(4.079, -19.018, 0), XMFLOAT4(0.75, 0.97, 0.72, 1.0f) },
    { XMFLOAT3(3.719, -19.451, 0), XMFLOAT4(0.1, 0.33, 0.03, 1.0f) },
    { XMFLOAT3(3.41, -19.86, 0), XMFLOAT4(0.35, 0.62, 0.01, 1.0f) },
    { XMFLOAT3(3.061, -19.692, 0), XMFLOAT4(0.06, 0.8, 0.41, 1.0f) },
    { XMFLOAT3(2.715, -19.508, 0), XMFLOAT4(0.19, 0.59, 0.61, 1.0f) },
    { XMFLOAT3(2.37, -19.31, 0), XMFLOAT4(0.24, 0.62, 0.39, 1.0f) },
    { XMFLOAT3(2.025, -19.099, 0), XMFLOAT4(0.75, 0.24, 0.97, 1.0f) },
    { XMFLOAT3(1.679, -18.875, 0), XMFLOAT4(0.89, 0.63, 0.44, 1.0f) },
    { XMFLOAT3(1.33, -18.64, 0), XMFLOAT4(0.03, 0.05, 0.67, 1.0f) },
    { XMFLOAT3(1.05, -18.44, 0), XMFLOAT4(0.05, 0.79, 0.77, 1.0f) },
    { XMFLOAT3(0.025, -17.718, 0), XMFLOAT4(0.37, 0.16, 0.79, 1.0f) },
    { XMFLOAT3(1.33, -21.06, 0), XMFLOAT4(0.56, 0.63, 0.3, 1.0f) },
    { XMFLOAT3(0.298, -22.985, 0), XMFLOAT4(0.77, 0.38, 0.98, 1.0f) },
    { XMFLOAT3(1.727, -23.623, 0), XMFLOAT4(0.82, 0.91, 0.91, 1.0f) },
    { XMFLOAT3(3.025, -24.225, 0), XMFLOAT4(1.0, 0.97, 0.37, 1.0f) },
    { XMFLOAT3(2.47, -26.96, 0), XMFLOAT4(0.59, 0.45, 0.72, 1.0f) },
    { XMFLOAT3(1.433, -26.385, 0), XMFLOAT4(0.5, 0.63, 0.64, 1.0f) },
    { XMFLOAT3(0.174, -25.74, 0), XMFLOAT4(0.66, 0.92, 0.85, 1.0f) },
    { XMFLOAT3(4.11, -24.76, 0), XMFLOAT4(0.08, 0.68, 0.62, 1.0f) },
    { XMFLOAT3(-6.955, -6.214, 0), XMFLOAT4(0.14, 0.8, 0.73, 1.0f) },
    { XMFLOAT3(-7.03, -6.417, 0), XMFLOAT4(0.73, 0.36, 0.38, 1.0f) },
    { XMFLOAT3(-7.105, -6.619, 0), XMFLOAT4(0.75, 0.72, 0.01, 1.0f) },
    { XMFLOAT3(-6.81, -5.8, 0), XMFLOAT4(0.16, 0.6, 0.41, 1.0f) },
    { XMFLOAT3(-6.881, -6.008, 0), XMFLOAT4(0.12, 0.62, 0.45, 1.0f) },
    { XMFLOAT3(-7.179, -6.82, 0), XMFLOAT4(0.08, 0.58, 0.99, 1.0f) },
    { XMFLOAT3(-5.69, -1.44, 0), XMFLOAT4(0.37, 0.1, 0.81, 1.0f) },
    { XMFLOAT3(-5.75, -1.732, 0), XMFLOAT4(0.27, 0.97, 0.11, 1.0f) },
    { XMFLOAT3(-5.811, -2.026, 0), XMFLOAT4(0.03, 0.46, 0.24, 1.0f) },
    { XMFLOAT3(-5.875, -2.322, 0), XMFLOAT4(0.21, 0.88, 0.86, 1.0f) },
    { XMFLOAT3(-5.942, -2.621, 0), XMFLOAT4(0.61, 0.49, 0.89, 1.0f) },
    { XMFLOAT3(-6.013, -2.92, 0), XMFLOAT4(0.46, 0.44, 0.41, 1.0f) },
    { XMFLOAT3(-6.09, -3.22, 0), XMFLOAT4(0.2, 0.63, 0.04, 1.0f) },
    { XMFLOAT3(-7.25, -7.02, 0), XMFLOAT4(0.29, 0.55, 0.07, 1.0f) },
    { XMFLOAT3(-0.59, -13.32, 0), XMFLOAT4(0.96, 0.54, 0.41, 1.0f) },
    { XMFLOAT3(-1.9, -16.098, 0), XMFLOAT4(0.09, 0.24, 0.11, 1.0f) },
    { XMFLOAT3(-2.778, -15.212, 0), XMFLOAT4(0.76, 0.54, 0.37, 1.0f) },
    { XMFLOAT3(-3.585, -14.284, 0), XMFLOAT4(0.49, 0.97, 0.16, 1.0f) },
    { XMFLOAT3(-4.31, -13.32, 0), XMFLOAT4(0.09, 0.42, 0.73, 1.0f) },
    { XMFLOAT3(-7.75, -14.602, 0), XMFLOAT4(0.13, 0.13, 0.21, 1.0f) },
    { XMFLOAT3(-6.387, -14.441, 0), XMFLOAT4(0.54, 0.02, 0.75, 1.0f) },
    { XMFLOAT3(-5.13, -14.26, 0), XMFLOAT4(0.37, 0.42, 0.55, 1.0f) },
    { XMFLOAT3(-4.01, -14.06, 0), XMFLOAT4(0.73, 0.76, 0.57, 1.0f) },
    { XMFLOAT3(-10.619, -6.82, 0), XMFLOAT4(0.57, 0.82, 0.1, 1.0f) },
    { XMFLOAT3(-10.545, -6.619, 0), XMFLOAT4(0.16, 0.88, 0.89, 1.0f) },
    { XMFLOAT3(-10.47, -6.417, 0), XMFLOAT4(0.85, 0.92, 0.08, 1.0f) },
    { XMFLOAT3(-10.69, -7.02, 0), XMFLOAT4(0.48, 0.36, 0.46, 1.0f) },
    { XMFLOAT3(-10.395, -6.214, 0), XMFLOAT4(0.24, 0.17, 0.33, 1.0f) },
    { XMFLOAT3(-10.321, -6.008, 0), XMFLOAT4(0.15, 0.22, 0.21, 1.0f) },
    { XMFLOAT3(-10.25, -5.8, 0), XMFLOAT4(0.4, 0.8, 0.28, 1.0f) },
    { XMFLOAT3(-9.45, -3.22, 0), XMFLOAT4(0.65, 0.89, 0.66, 1.0f) },
    { XMFLOAT3(-9.372, -2.861, 0), XMFLOAT4(0.08, 0.64, 0.83, 1.0f) },
    { XMFLOAT3(-9.297, -2.505, 0), XMFLOAT4(0.75, 0.43, 0.04, 1.0f) },
    { XMFLOAT3(-9.225, -2.15, 0), XMFLOAT4(0.87, 0.73, 0.61, 1.0f) },
    { XMFLOAT3(-9.157, -1.795, 0), XMFLOAT4(0.15, 0.58, 0.11, 1.0f) },
    { XMFLOAT3(-9.092, -1.439, 0), XMFLOAT4(0.46, 0.33, 0.64, 1.0f) },
    { XMFLOAT3(-9.03, -1.08, 0), XMFLOAT4(0.65, 0.11, 0.49, 1.0f) },
    { XMFLOAT3(-8.31, -9.46, 0), XMFLOAT4(0.47, 0.9, 0.86, 1.0f) },
    { XMFLOAT3(-12.79, -10.7, 0), XMFLOAT4(0.64, 0.08, 0.15, 1.0f) },
    { XMFLOAT3(-12.65, -10.491, 0), XMFLOAT4(0.12, 0.61, 0.32, 1.0f) },
    { XMFLOAT3(-12.511, -10.285, 0), XMFLOAT4(0.89, 0.69, 0.51, 1.0f) },
    { XMFLOAT3(-12.372, -10.08, 0), XMFLOAT4(0.27, 0.98, 0.5, 1.0f) },
    { XMFLOAT3(-12.236, -9.875, 0), XMFLOAT4(0.5, 0.38, 0.03, 1.0f) },
    { XMFLOAT3(-12.102, -9.669, 0), XMFLOAT4(0.71, 0.44, 0.11, 1.0f) },
    { XMFLOAT3(-11.97, -9.46, 0), XMFLOAT4(0.11, 0.59, 0.17, 1.0f) },
    { XMFLOAT3(-8.42, -9.669, 0), XMFLOAT4(0.99, 0.08, 0.48, 1.0f) },
    { XMFLOAT3(-8.531, -9.875, 0), XMFLOAT4(0.23, 0.88, 0.24, 1.0f) },
    { XMFLOAT3(-8.645, -10.08, 0), XMFLOAT4(0.22, 0.91, 0.4, 1.0f) },
    { XMFLOAT3(-8.762, -10.285, 0), XMFLOAT4(0.22, 0.9, 0.87, 1.0f) },
    { XMFLOAT3(-8.883, -10.491, 0), XMFLOAT4(0.15, 0.75, 0.07, 1.0f) },
    { XMFLOAT3(-9.01, -10.7, 0), XMFLOAT4(0.91, 0.59, 0.52, 1.0f) },
    { XMFLOAT3(-15.826, -14.093, 0), XMFLOAT4(0.4, 0.82, 0.75, 1.0f) },
    { XMFLOAT3(-10.75, -13.32, 0), XMFLOAT4(0.41, 0.35, 0.81, 1.0f) },
    { XMFLOAT3(-10.965, -13.6, 0), XMFLOAT4(0.35, 0.82, 0.32, 1.0f) },
    { XMFLOAT3(-11.189, -13.879, 0), XMFLOAT4(0.41, 0.24, 0.86, 1.0f) },
    { XMFLOAT3(-11.42, -14.157, 0), XMFLOAT4(0.5, 0.17, 0.45, 1.0f) },
    { XMFLOAT3(-11.658, -14.434, 0), XMFLOAT4(0.97, 0.95, 0.9, 1.0f) },
    { XMFLOAT3(-11.902, -14.708, 0), XMFLOAT4(0.1, 0.19, 0.29, 1.0f) },
    { XMFLOAT3(-12.15, -14.98, 0), XMFLOAT4(0.36, 0.64, 0.13, 1.0f) },
    { XMFLOAT3(-15.03, -13.32, 0), XMFLOAT4(0.08, 0.7, 0.53, 1.0f) },
    { XMFLOAT3(-10.664, -14.872, 0), XMFLOAT4(0.95, 0.25, 0.3, 1.0f) },
    { XMFLOAT3(-9.186, -14.746, 0), XMFLOAT4(0.49, 0.02, 0.25, 1.0f) },
    { XMFLOAT3(-13.162, -16.306, 0), XMFLOAT4(0.47, 0.13, 0.66, 1.0f) },
    { XMFLOAT3(-13.23, -16.1, 0), XMFLOAT4(0.65, 0.93, 0.4, 1.0f) },
    { XMFLOAT3(-18.627, -16.201, 0), XMFLOAT4(0.26, 0.77, 0.18, 1.0f) },
    { XMFLOAT3(-16.693, -14.832, 7.374), XMFLOAT4(0.25, 0.02, 0.36, 1.0f) },
    { XMFLOAT3(-17.09, -7.02, 7.374), XMFLOAT4(0.45, 0.75, 0.07, 1.0f) },
    { XMFLOAT3(-17.09, -9.46, 7.374), XMFLOAT4(0.73, 0.57, 0.86, 1.0f) },
    { XMFLOAT3(-18.51, -3.22, 7.374), XMFLOAT4(0.99, 0.17, 0.77, 1.0f) },
    { XMFLOAT3(-18.51, -5.8, 7.374), XMFLOAT4(0.83, 0.31, 0.89, 1.0f) },
    { XMFLOAT3(-5.93, -18.44, 7.374), XMFLOAT4(0.5, 0.91, 0.42, 1.0f) },
    { XMFLOAT3(-5.93, -16.96, 7.374), XMFLOAT4(0.89, 0.94, 0.69, 1.0f) },
    { XMFLOAT3(2.31, -7.02, 7.374), XMFLOAT4(0.68, 0.8, 0.59, 1.0f) },
    { XMFLOAT3(2.31, -9.46, 7.374), XMFLOAT4(0.09, 0.04, 0.73, 1.0f) },
    { XMFLOAT3(-0.962, -16.935, 7.374), XMFLOAT4(0.05, 0.86, 0.23, 1.0f) },
    { XMFLOAT3(5.07, -13.32, 7.374), XMFLOAT4(0.74, 0.93, 0.2, 1.0f) },
    { XMFLOAT3(5.07, -10.7, 7.374), XMFLOAT4(0.5, 0.53, 0.32, 1.0f) },
    { XMFLOAT3(0.306, -14.164, 7.374), XMFLOAT4(0.75, 0.02, 0.85, 1.0f) },
    { XMFLOAT3(1.285, -14.951, 7.374), XMFLOAT4(0.55, 0.66, 0.49, 1.0f) },
    { XMFLOAT3(2.333, -15.675, 7.374), XMFLOAT4(0.99, 0.67, 0.57, 1.0f) },
    { XMFLOAT3(3.435, -16.329, 7.374), XMFLOAT4(0.47, 0.54, 0.02, 1.0f) },
    { XMFLOAT3(-20.09, -13.32, 0), XMFLOAT4(0.68, 0.26, 0.78, 1.0f) },
    { XMFLOAT3(-20.09, -10.7, 0), XMFLOAT4(0.16, 0.54, 0.9, 1.0f) },
    { XMFLOAT3(-5.335, -16.897, 7.374), XMFLOAT4(0.81, 0.14, 0.25, 1.0f) },
    { XMFLOAT3(-4.751, -16.827, 7.374), XMFLOAT4(0.29, 0.67, 0.66, 1.0f) },
    { XMFLOAT3(-4.18, -16.75, 7.374), XMFLOAT4(0.56, 0.49, 0.02, 1.0f) },
    { XMFLOAT3(-3.622, -16.667, 7.374), XMFLOAT4(0.55, 0.3, 0.0, 1.0f) },
    { XMFLOAT3(-3.078, -16.577, 7.374), XMFLOAT4(0.87, 0.32, 0.71, 1.0f) },
    { XMFLOAT3(-2.55, -16.48, 7.374), XMFLOAT4(0.48, 0.7, 0.43, 1.0f) },
    { XMFLOAT3(-17.627, -15.535, 0), XMFLOAT4(0.3, 0.54, 0.49, 1.0f) },
    { XMFLOAT3(5.75, -17.4, 7.374), XMFLOAT4(0.58, 0.37, 0.69, 1.0f) },
    { XMFLOAT3(5.324, -17.75, 7.374), XMFLOAT4(0.75, 0.81, 0.24, 1.0f) },
    { XMFLOAT3(4.894, -18.149, 7.374), XMFLOAT4(0.97, 0.93, 0.2, 1.0f) },
    { XMFLOAT3(4.475, -18.578, 7.374), XMFLOAT4(0.42, 0.85, 0.43, 1.0f) },
    { XMFLOAT3(-5.51, -23.06, 7.374), XMFLOAT4(0.41, 0.68, 0.6, 1.0f) },
    { XMFLOAT3(-4.148, -23.685, 7.374), XMFLOAT4(0.5, 0.09, 0.55, 1.0f) },
    { XMFLOAT3(4.579, -16.906, 7.374), XMFLOAT4(0.65, 0.82, 0.65, 1.0f) },
    { XMFLOAT3(-2.694, -24.36, 7.374), XMFLOAT4(0.29, 0.32, 0.85, 1.0f) },
    { XMFLOAT3(-16.693, -14.832, 0), XMFLOAT4(0.63, 0.99, 0.7, 1.0f) },
    { XMFLOAT3(4.079, -19.018, 7.374), XMFLOAT4(0.07, 0.07, 0.62, 1.0f) },
    { XMFLOAT3(3.719, -19.451, 7.374), XMFLOAT4(0.71, 0.75, 0.65, 1.0f) },
    { XMFLOAT3(-5.93, -21.06, 7.374), XMFLOAT4(0.51, 0.08, 0.31, 1.0f) },
    { XMFLOAT3(1.679, -18.875, 7.374), XMFLOAT4(0.03, 0.82, 0.51, 1.0f) },
    { XMFLOAT3(2.025, -19.099, 7.374), XMFLOAT4(0.37, 0.1, 0.49, 1.0f) },
    { XMFLOAT3(2.37, -19.31, 7.374), XMFLOAT4(0.51, 0.19, 0.09, 1.0f) },
    { XMFLOAT3(2.715, -19.508, 7.374), XMFLOAT4(0.83, 0.94, 0.7, 1.0f) },
    { XMFLOAT3(3.061, -19.692, 7.374), XMFLOAT4(0.66, 0.39, 0.75, 1.0f) },
    { XMFLOAT3(3.41, -19.86, 7.374), XMFLOAT4(0.31, 0.61, 0.07, 1.0f) },
    { XMFLOAT3(1.33, -18.64, 7.374), XMFLOAT4(0.37, 0.93, 0.23, 1.0f) },
    { XMFLOAT3(-1.18, -22.344, 7.374), XMFLOAT4(0.53, 0.67, 0.23, 1.0f) },
    { XMFLOAT3(-2.624, -21.731, 7.374), XMFLOAT4(0.13, 0.22, 0.07, 1.0f) },
    { XMFLOAT3(-3.95, -21.18, 7.374), XMFLOAT4(0.78, 0.55, 0.12, 1.0f) },
    { XMFLOAT3(1.05, -18.44, 7.374), XMFLOAT4(0.7, 0.13, 0.4, 1.0f) },
    { XMFLOAT3(-1.227, -25.055, 7.374), XMFLOAT4(0.93, 0.08, 0.67, 1.0f) },
    { XMFLOAT3(0.025, -17.718, 7.374), XMFLOAT4(0.3, 0.62, 0.26, 1.0f) },
    { XMFLOAT3(1.33, -21.06, 7.374), XMFLOAT4(0.29, 0.15, 0.51, 1.0f) },
    { XMFLOAT3(-9.19, -18.44, 7.374), XMFLOAT4(0.18, 0.64, 0.97, 1.0f) },
    { XMFLOAT3(3.025, -24.225, 7.374), XMFLOAT4(0.25, 0.0, 0.89, 1.0f) },
    { XMFLOAT3(1.727, -23.623, 7.374), XMFLOAT4(0.14, 0.59, 0.66, 1.0f) },
    { XMFLOAT3(0.298, -22.985, 7.374), XMFLOAT4(0.79, 0.81, 0.36, 1.0f) },
    { XMFLOAT3(2.47, -26.96, 7.374), XMFLOAT4(0.14, 0.32, 0.83, 1.0f) },
    { XMFLOAT3(1.433, -26.385, 7.374), XMFLOAT4(0.56, 0.81, 0.4, 1.0f) },
    { XMFLOAT3(0.174, -25.74, 7.374), XMFLOAT4(0.46, 0.67, 0.4, 1.0f) },
    { XMFLOAT3(4.11, -24.76, 7.374), XMFLOAT4(0.66, 0.83, 0.81, 1.0f) },
    { XMFLOAT3(-9.19, -17.24, 7.374), XMFLOAT4(0.38, 0.0, 0.53, 1.0f) },
    { XMFLOAT3(-6.955, -6.214, 7.374), XMFLOAT4(0.3, 0.18, 0.95, 1.0f) },
    { XMFLOAT3(-7.105, -6.619, 7.374), XMFLOAT4(0.17, 0.83, 0.5, 1.0f) },
    { XMFLOAT3(-7.03, -6.417, 7.374), XMFLOAT4(0.17, 0.31, 0.24, 1.0f) },
    { XMFLOAT3(-11.711, -17.347, 7.374), XMFLOAT4(0.75, 0.57, 0.51, 1.0f) },
    { XMFLOAT3(-11.09, -17.33, 7.374), XMFLOAT4(0.4, 0.04, 0.78, 1.0f) },
    { XMFLOAT3(-10.462, -17.307, 7.374), XMFLOAT4(0.55, 0.2, 0.95, 1.0f) },
    { XMFLOAT3(-9.828, -17.277, 7.374), XMFLOAT4(0.44, 0.83, 0.49, 1.0f) },
    { XMFLOAT3(-17.09, -9.46, 0), XMFLOAT4(0.49, 0.14, 0.1, 1.0f) },
    { XMFLOAT3(-17.09, -7.02, 0), XMFLOAT4(0.03, 0.22, 0.18, 1.0f) },
    { XMFLOAT3(-6.81, -5.8, 7.374), XMFLOAT4(0.94, 0.99, 0.92, 1.0f) },
    { XMFLOAT3(-18.51, -5.8, 0), XMFLOAT4(0.2, 0.01, 0.1, 1.0f) },
    { XMFLOAT3(-18.51, -3.22, 0), XMFLOAT4(0.33, 0.5, 0.07, 1.0f) },
    { XMFLOAT3(-6.881, -6.008, 7.374), XMFLOAT4(0.84, 0.49, 0.48, 1.0f) },
    { XMFLOAT3(-7.179, -6.82, 7.374), XMFLOAT4(0.83, 0.43, 0.28, 1.0f) },
    { XMFLOAT3(-5.93, -16.96, 0), XMFLOAT4(0.95, 0.79, 0.15, 1.0f) },
    { XMFLOAT3(-5.93, -18.44, 0), XMFLOAT4(0.91, 0.13, 0.78, 1.0f) },
    { XMFLOAT3(-12.956, -17.163, 7.374), XMFLOAT4(0.53, 0.05, 0.54, 1.0f) },
    { XMFLOAT3(-12.93, -17.36, 7.374), XMFLOAT4(0.55, 0.95, 0.11, 1.0f) },
    { XMFLOAT3(-5.69, -1.44, 7.374), XMFLOAT4(0.49, 0.2, 0.44, 1.0f) },
    { XMFLOAT3(-6.09, -3.22, 7.374), XMFLOAT4(0.86, 0.52, 0.08, 1.0f) },
    { XMFLOAT3(-6.013, -2.92, 7.374), XMFLOAT4(0.63, 0.2, 0.13, 1.0f) },
    { XMFLOAT3(-5.942, -2.621, 7.374), XMFLOAT4(0.46, 0.85, 0.32, 1.0f) },
    { XMFLOAT3(-5.875, -2.322, 7.374), XMFLOAT4(0.62, 0.74, 0.12, 1.0f) },
    { XMFLOAT3(-5.811, -2.026, 7.374), XMFLOAT4(0.16, 0.1, 0.86, 1.0f) },
    { XMFLOAT3(-5.75, -1.732, 7.374), XMFLOAT4(0.98, 0.79, 0.22, 1.0f) },
    { XMFLOAT3(-0.962, -16.935, 0), XMFLOAT4(0.08, 0.39, 0.15, 1.0f) },
    { XMFLOAT3(-7.25, -7.02, 7.374), XMFLOAT4(0.8, 0.61, 0.85, 1.0f) },
    { XMFLOAT3(-0.59, -13.32, 7.374), XMFLOAT4(0.85, 0.43, 0.98, 1.0f) },
    { XMFLOAT3(-2.55, -16.48, 0), XMFLOAT4(0.42, 0.08, 0.8, 1.0f) },
    { XMFLOAT3(-3.078, -16.577, 0), XMFLOAT4(0.87, 0.84, 0.31, 1.0f) },
    { XMFLOAT3(-3.622, -16.667, 0), XMFLOAT4(0.89, 0.42, 0.58, 1.0f) },
    { XMFLOAT3(-4.18, -16.75, 0), XMFLOAT4(0.43, 0.39, 0.21, 1.0f) },
    { XMFLOAT3(-4.751, -16.827, 0), XMFLOAT4(1.0, 0.62, 0.64, 1.0f) },
    { XMFLOAT3(-5.335, -16.897, 0), XMFLOAT4(0.99, 0.4, 0.6, 1.0f) },
    { XMFLOAT3(-4.31, -13.32, 7.374), XMFLOAT4(0.16, 0.2, 0.85, 1.0f) },
    { XMFLOAT3(-3.585, -14.284, 7.374), XMFLOAT4(0.9, 0.36, 0.17, 1.0f) },
    { XMFLOAT3(-2.778, -15.212, 7.374), XMFLOAT4(0.73, 0.19, 0.71, 1.0f) },
    { XMFLOAT3(-1.9, -16.098, 7.374), XMFLOAT4(0.4, 0.66, 0.84, 1.0f) },
    { XMFLOAT3(-4.148, -23.685, 0), XMFLOAT4(0.82, 0.03, 0.02, 1.0f) },
    { XMFLOAT3(-5.51, -23.06, 0), XMFLOAT4(0.7, 0.35, 0.77, 1.0f) },
    { XMFLOAT3(-2.694, -24.36, 0), XMFLOAT4(0.97, 0.17, 0.69, 1.0f) },
    { XMFLOAT3(-7.75, -14.602, 7.374), XMFLOAT4(0.73, 0.29, 0.72, 1.0f) },
    { XMFLOAT3(-6.387, -14.441, 7.374), XMFLOAT4(0.57, 0.57, 0.15, 1.0f) },
    { XMFLOAT3(-5.13, -14.26, 7.374), XMFLOAT4(0.05, 0.42, 0.69, 1.0f) },
    { XMFLOAT3(-4.01, -14.06, 7.374), XMFLOAT4(0.9, 0.99, 0.26, 1.0f) },
    { XMFLOAT3(-5.93, -21.06, 0), XMFLOAT4(0.57, 0.91, 0.17, 1.0f) },
    { XMFLOAT3(-3.95, -21.18, 0), XMFLOAT4(0.6, 0.4, 0.17, 1.0f) },
    { XMFLOAT3(-2.624, -21.731, 0), XMFLOAT4(0.49, 0.57, 0.36, 1.0f) },
    { XMFLOAT3(-1.18, -22.344, 0), XMFLOAT4(0.87, 0.78, 0.64, 1.0f) },
    { XMFLOAT3(-10.545, -6.619, 7.374), XMFLOAT4(0.31, 0.1, 0.44, 1.0f) },
    { XMFLOAT3(-10.619, -6.82, 7.374), XMFLOAT4(0.9, 0.97, 0.87, 1.0f) },
    { XMFLOAT3(-10.47, -6.417, 7.374), XMFLOAT4(0.49, 0.48, 0.5, 1.0f) },
    { XMFLOAT3(-1.227, -25.055, 0), XMFLOAT4(0.51, 0.06, 0.14, 1.0f) },
    { XMFLOAT3(-10.69, -7.02, 7.374), XMFLOAT4(0.03, 0.77, 0.63, 1.0f) },
    { XMFLOAT3(-10.395, -6.214, 7.374), XMFLOAT4(0.94, 0.41, 0.33, 1.0f) },
    { XMFLOAT3(-9.19, -18.44, 0), XMFLOAT4(0.98, 0.69, 0.68, 1.0f) },
    { XMFLOAT3(-10.321, -6.008, 7.374), XMFLOAT4(0.62, 0.37, 0.52, 1.0f) },
    { XMFLOAT3(-10.25, -5.8, 7.374), XMFLOAT4(0.49, 0.62, 0.14, 1.0f) },
    { XMFLOAT3(-9.45, -3.22, 7.374), XMFLOAT4(0.57, 0.38, 0.1, 1.0f) },
    { XMFLOAT3(-9.372, -2.861, 7.374), XMFLOAT4(0.5, 0.02, 0.12, 1.0f) },
    { XMFLOAT3(-9.297, -2.505, 7.374), XMFLOAT4(0.34, 0.62, 0.15, 1.0f) },
    { XMFLOAT3(-9.19, -17.24, 0), XMFLOAT4(0.02, 0.29, 0.97, 1.0f) },
    { XMFLOAT3(-9.225, -2.15, 7.374), XMFLOAT4(0.7, 0.94, 0.6, 1.0f) },
    { XMFLOAT3(-9.157, -1.795, 7.374), XMFLOAT4(0.03, 0.06, 0.67, 1.0f) },
    { XMFLOAT3(-9.828, -17.277, 0), XMFLOAT4(0.26, 0.02, 0.87, 1.0f) },
    { XMFLOAT3(-9.092, -1.439, 7.374), XMFLOAT4(0.83, 0.6, 0.67, 1.0f) },
    { XMFLOAT3(-10.462, -17.307, 0), XMFLOAT4(0.38, 0.26, 0.99, 1.0f) },
    { XMFLOAT3(-11.09, -17.33, 0), XMFLOAT4(0.5, 0.15, 0.39, 1.0f) },
    { XMFLOAT3(-11.711, -17.347, 0), XMFLOAT4(0.14, 0.56, 0.81, 1.0f) },
    { XMFLOAT3(-9.03, -1.08, 7.374), XMFLOAT4(0.25, 0.99, 0.68, 1.0f) },
    { XMFLOAT3(-12.93, -17.36, 0), XMFLOAT4(0.23, 0.05, 0.91, 1.0f) },
    { XMFLOAT3(-12.956, -17.163, 0), XMFLOAT4(0.66, 0.89, 0.88, 1.0f) },
    { XMFLOAT3(-8.31, -9.46, 7.374), XMFLOAT4(0.05, 0.92, 0.14, 1.0f) },
    { XMFLOAT3(-12.372, -10.08, 7.374), XMFLOAT4(0.86, 0.39, 0.91, 1.0f) },
    { XMFLOAT3(-12.511, -10.285, 7.374), XMFLOAT4(0.52, 0.0, 0.18, 1.0f) },
    { XMFLOAT3(-12.65, -10.491, 7.374), XMFLOAT4(0.79, 0.16, 0.33, 1.0f) },
    { XMFLOAT3(-12.79, -10.7, 7.374), XMFLOAT4(0.08, 0.46, 0.86, 1.0f) },
    { XMFLOAT3(3.67, -5.8, 7.374), XMFLOAT4(0.61, 0.35, 0.73, 1.0f) },
    { XMFLOAT3(3.67, -3.22, 7.374), XMFLOAT4(0.32, 0.29, 0.18, 1.0f) },
    { XMFLOAT3(-12.236, -9.875, 7.374), XMFLOAT4(0.42, 0.22, 0.78, 1.0f) },
    { XMFLOAT3(-12.102, -9.669, 7.374), XMFLOAT4(0.92, 0.86, 0.01, 1.0f) },
    { XMFLOAT3(-11.97, -9.46, 7.374), XMFLOAT4(0.23, 0.81, 0.45, 1.0f) },
    { XMFLOAT3(-9.01, -10.7, 7.374), XMFLOAT4(0.42, 0.83, 0.32, 1.0f) },
    { XMFLOAT3(-8.883, -10.491, 7.374), XMFLOAT4(0.71, 0.55, 0.78, 1.0f) },
    { XMFLOAT3(-8.762, -10.285, 7.374), XMFLOAT4(0.9, 0.59, 0.23, 1.0f) },
    { XMFLOAT3(-8.645, -10.08, 7.374), XMFLOAT4(0.61, 0.86, 0.81, 1.0f) },
    { XMFLOAT3(-8.531, -9.875, 7.374), XMFLOAT4(0.19, 0.29, 0.47, 1.0f) },
    { XMFLOAT3(-8.42, -9.669, 7.374), XMFLOAT4(0.54, 0.06, 0.41, 1.0f) },
    { XMFLOAT3(-10.75, -13.32, 7.374), XMFLOAT4(0.71, 0.97, 0.8, 1.0f) },
    { XMFLOAT3(-10.965, -13.6, 7.374), XMFLOAT4(0.44, 0.09, 0.17, 1.0f) },
    { XMFLOAT3(-12.15, -14.98, 7.374), XMFLOAT4(0.26, 0.75, 0.77, 1.0f) },
    { XMFLOAT3(-10.664, -14.872, 7.374), XMFLOAT4(0.48, 0.34, 0.59, 1.0f) },
    { XMFLOAT3(-9.186, -14.746, 7.374), XMFLOAT4(0.63, 0.91, 0.95, 1.0f) },
    { XMFLOAT3(-15.826, -14.093, 7.374), XMFLOAT4(0.03, 0.89, 0.42, 1.0f) },
    { XMFLOAT3(-13.162, -16.306, 7.374), XMFLOAT4(0.43, 0.78, 0.56, 1.0f) },
    { XMFLOAT3(-13.23, -16.1, 7.374), XMFLOAT4(0.5, 0.01, 0.33, 1.0f) },
    { XMFLOAT3(-11.902, -14.708, 7.374), XMFLOAT4(0.98, 0.04, 0.75, 1.0f) },
    { XMFLOAT3(-11.658, -14.434, 7.374), XMFLOAT4(0.18, 0.26, 0.84, 1.0f) },
    { XMFLOAT3(-11.42, -14.157, 7.374), XMFLOAT4(0.37, 0.43, 0.86, 1.0f) },
    { XMFLOAT3(-11.189, -13.879, 7.374), XMFLOAT4(0.71, 0.42, 0.0, 1.0f) },
    { XMFLOAT3(-15.03, -13.32, 7.374), XMFLOAT4(0.53, 0.27, 0.03, 1.0f) },
    { XMFLOAT3(-20.09, -10.7, 7.374), XMFLOAT4(0.85, 0.29, 0.85, 1.0f) },
    { XMFLOAT3(-20.09, -13.32, 7.374), XMFLOAT4(0.74, 0.02, 0.44, 1.0f) },
    { XMFLOAT3(-18.627, -16.201, 7.374), XMFLOAT4(0.21, 0.87, 0.51, 1.0f) },
    { XMFLOAT3(-17.627, -15.535, 7.374), XMFLOAT4(1.0, 0.68, 0.06, 1.0f) },

        };
        static const WORD tempIndices[] = {
   2,1,0,
    3,2,0,
    3,0,4,
    5,3,4,
    12,11,10,
    13,12,10,
    11,15,14,
    10,11,14,
    15,17,16,
    14,15,16,
    17,19,18,
    16,17,18,
    21,20,12,
    13,21,12,
    38,24,25,
    27,26,22,
    23,27,22,
    29,28,30,
    31,29,30,
    30,26,27,
    31,30,27,
    33,35,34,
    32,33,34,
    35,37,36,
    34,35,36,
    39,38,25,
    22,37,23,
    37,22,36,
    40,39,41,
    39,40,38,
    43,45,44,
    42,43,44,
    45,47,46,
    44,45,46,
    47,32,46,
    32,47,33,
    50,49,48,
    51,50,48,
    54,53,52,
    55,54,52,
    55,52,56,
    57,55,56,
    57,56,58,
    59,57,58,
    53,54,65,
    59,58,60,
    61,59,60,
    61,60,62,
    63,61,62,
    53,65,64,
    66,64,65,
    50,63,62,
    49,50,62,
    67,66,65,
    67,69,68,
    66,67,68,
    69,71,70,
    68,69,70,
    71,73,72,
    70,71,72,
    73,8,72,
    8,73,9,
    76,75,74,
    77,76,74,
    77,74,78,
    79,77,78,
    78,29,79,
    29,78,28,
    76,90,75,
    90,76,91,
    82,81,80,
    83,82,80,
    83,80,84,
    85,83,84,
    85,84,86,
    87,85,86,
    87,86,88,
    89,87,88,
    81,43,42,
    89,88,90,
    91,89,90,
    43,81,82,
    41,93,92,
    40,41,92,
    105,108,106,
    108,105,104,
    106,108,107,
    109,103,110,
    107,103,109,
    103,107,108,
    110,112,111,
    112,110,103,
    113,112,103,
    114,113,103,
    115,114,103,
    116,115,103,
    117,116,103,
    103,118,117,
    118,102,119,
    122,125,123,
    301,293,305,
    125,122,126,
    124,123,125,
    123,124,127,
    129,157,130,
    95,140,131,
    140,95,94,
    132,157,128,
    128,157,129,
    163,137,136,
    161,139,138,
    139,161,140,
    162,138,137,
    137,163,162,
    158,131,140,
    131,157,132,
    130,157,133,
    133,157,141,
    141,97,96,
    165,97,141,
    98,142,99,
    144,142,145,
    142,144,143,
    145,142,146,
    143,100,142,
    100,278,101,
    102,118,103,
    142,178,146,
    147,267,148,
    149,284,150,
    152,141,153,
    151,141,152,
    153,141,155,
    155,141,156,
    157,264,263,
    156,141,157,
    158,140,159,
    160,140,161,
    164,136,135,
    164,135,134,
    136,164,163,
    168,180,178,
    169,178,170,
    154,174,173,
    174,154,172,
    172,175,174,
    172,176,175,
    172,177,176,
    172,178,177,
    178,172,171,
    178,171,170,
    154,173,165,
    172,261,260,
    154,261,172,
    154,165,141,
    141,151,154,
    157,131,158,
    159,140,160,
    161,138,162,
    180,168,167,
    168,178,169,
    178,180,146,
    178,142,98,
    166,183,182,
    183,166,187,
    183,187,184,
    185,187,186,
    184,187,185,
    187,191,186,
    166,182,181,
    188,317,189,
    186,4,188,
    190,186,191,
    189,314,147,
    180,167,166,
    166,181,180,
    193,11,357,
    198,252,199,
    206,242,202,
    242,206,207,
    212,296,213,
    211,296,212,
    213,297,214,
    214,297,215,
    215,297,216,
    219,224,218,
    224,219,220,
    224,220,221,
    240,229,198,
    231,224,221,
    233,228,234,
    233,227,228,
    227,233,232,
    234,228,235,
    227,232,231,
    231,221,227,
    208,231,230,
    231,208,224,
    236,208,230,
    223,239,238,
    239,223,222,
    238,225,223,
    225,238,237,
    229,240,236,
    237,241,225,
    247,250,241,
    240,208,236,
    240,207,208,
    207,240,242,
    243,229,236,
    247,241,237,
    248,245,251,
    252,198,244,
    245,249,246,
    245,248,249,
    250,247,246,
    246,249,250,
    295,211,199,
    179,191,187,
    179,16,18,
    191,179,18,
    16,179,226,
    315,274,273,
    210,187,166,
    187,210,209,
    256,343,257,
    257,344,258,
    199,294,295,
    264,157,158,
    272,312,313,
    272,313,315,
    315,273,272,
    7,270,269,
    39,20,244,
    316,275,274,
    275,316,318,
    318,276,275,
    276,318,322,
    276,322,277,
    277,322,271,
    298,117,118,
    117,298,120,
    272,311,312,
    119,101,278,
    7,269,2,
    262,310,311,
    101,119,102,
    20,39,9,
    7,2,3,
    201,279,200,
    278,100,143,
    280,335,204,
    203,280,204,
    3,256,7,
    282,281,150,
    283,282,150,
    284,283,150,
    284,149,285,
    285,149,286,
    286,148,267,
    280,288,287,
    280,289,288,
    280,290,289,
    290,205,202,
    202,205,206,
    290,280,205,
    12,357,11,
    15,193,17,
    17,346,19,
    39,25,9,
    252,345,294,
    298,118,268,
    297,213,296,
    296,211,295,
    294,199,252,
    194,334,195,
    41,229,93,
    291,300,299,
    291,299,292,
    121,126,122,
    305,121,301,
    126,121,305,
    229,244,198,
    229,39,244,
    39,229,41,
    300,291,293,
    293,301,300,
    303,279,306,
    35,27,23,
    35,23,37,
    33,31,27,
    31,33,47,
    47,29,31,
    29,47,45,
    279,303,302,
    268,314,308,
    268,308,298,
    27,35,33,
    279,304,307,
    279,302,304,
    310,196,311,
    196,310,197,
    279,307,309,
    314,268,267,
    55,65,54,
    55,67,65,
    67,55,57,
    267,147,314,
    310,266,279,
    57,69,67,
    69,57,59,
    310,255,254,
    310,253,255,
    319,188,320,
    317,188,319,
    188,6,321,
    188,1,6,
    314,189,317,
    310,265,253,
    310,262,265,
    311,272,262,
    274,315,316,
    69,356,71,
    71,356,73,
    51,69,59,
    51,59,61,
    51,61,63,
    20,356,357,
    11,193,15,
    73,356,9,
    51,63,50,
    77,91,76,
    77,89,91,
    77,87,89,
    45,79,29,
    324,323,6,
    43,83,85,
    83,43,82,
    325,306,279,
    43,79,45,
    85,77,43,
    324,6,1,
    79,43,77,
    77,85,87,
    188,321,320,
    331,94,95,
    330,331,95,
    21,38,308,
    327,341,328,
    328,341,329,
    0,188,4,
    200,96,97,
    201,200,97,
    335,326,332,
    335,327,326,
    95,262,330,
    1,188,0,
    148,286,149,
    334,335,333,
    333,335,332,
    335,334,336,
    334,337,336,
    334,338,337,
    334,339,338,
    339,306,340,
    340,306,325,
    4,186,190,
    217,21,13,
    10,226,217,
    192,72,8,
    192,70,72,
    226,10,14,
    181,342,341,
    180,181,341,
    310,254,266,
    279,309,310,
    334,194,306,
    306,339,334,
    279,201,325,
    343,186,188,
    344,343,188,
    192,68,70,
    344,188,189,
    345,344,189,
    329,351,353,
    329,353,354,
    341,327,335,
    345,189,147,
    38,8,24,
    346,17,193,
    4,347,5,
    347,4,190,
    38,21,8,
    347,190,191,
    348,347,191,
    348,18,19,
    18,348,191,
    353,209,355,
    350,353,351,
    351,329,352,
    353,350,349,
    352,329,342,
    342,329,341,
    353,349,343,
    353,348,346,
    30,46,32,
    287,180,341,
    348,353,343,
    343,347,348,
    40,298,38,
    298,40,92,
    180,287,146,
    5,343,256,
    343,5,347,
    344,257,343,
    259,344,345,
    256,3,5,
    258,344,259,
    345,252,259,
    298,308,38,
    196,264,158,
    19,346,348,
    355,209,210,
    354,355,210,
    34,36,22,
    34,26,32,
    46,30,28,
    32,26,30,
    26,34,22,
    335,287,341,
    335,280,287,
    48,356,51,
    356,48,192,
    192,357,356,
    357,192,217,
    74,84,42,
    356,69,51,
    197,263,264,
    196,197,264,
    356,20,9,
    52,66,56,
    357,12,20,
    192,8,21,
    193,357,217,
    354,353,355,
    64,52,53,
    52,64,66,
    60,48,62,
    195,260,261,
    194,195,261,
    68,48,58,
    68,58,56,
    68,56,66,
    68,192,48,
    62,48,49,
    21,217,192,
    217,13,10,
    226,14,16,
    58,48,60,
    193,217,226,
    131,262,95,
    226,346,193,
    346,226,179,
    44,28,78,
    209,353,187,
    90,74,75,
    28,44,46,
    78,42,44,
    265,132,128,
    80,42,84,
    268,198,199,
    267,268,199,
    84,74,86,
    42,80,81,
    42,78,74,
    265,262,131,
    132,265,131,
    88,74,90,
    268,240,198,
    266,133,141,
    279,266,141,
    86,74,88,
    273,139,140,
    272,273,140,
    202,119,278,
    119,202,242,
    274,138,139,
    273,274,139,
    272,330,262,
    330,272,331,
    199,211,286,
    267,199,286,
    275,137,138,
    274,275,138,
    278,290,202,
    276,136,137,
    275,276,137,
    211,212,285,
    286,211,285,
    277,135,136,
    276,277,136,
    271,134,135,
    277,271,135,
    271,322,134,
    212,213,284,
    285,212,284,
    141,200,279,
    200,141,96,
    213,214,283,
    284,213,283,
    214,215,282,
    283,214,282,
    215,216,281,
    282,215,281,
    142,280,203,
    99,142,203,
    150,281,216,
    280,142,100,
    298,93,229,
    288,145,146,
    287,288,146,
    289,144,145,
    288,289,145,
    290,143,144,
    289,290,144,
    290,278,143,
    292,222,223,
    291,292,223,
    297,150,216,
    223,225,293,
    291,223,293,
    294,345,147,
    294,147,148,
    295,294,148,
    295,148,149,
    296,295,149,
    237,301,121,
    296,149,150,
    297,296,150,
    322,164,134,
    238,300,301,
    237,238,301,
    311,196,158,
    194,261,154,
    239,299,300,
    238,239,300,
    302,152,153,
    304,302,153,
    229,120,298,
    154,306,194,
    303,151,152,
    302,303,152,
    93,298,92,
    292,239,222,
    239,292,299,
    304,153,155,
    307,304,155,
    126,305,241,
    306,154,151,
    303,306,151,
    225,241,305,
    293,225,305,
    307,155,156,
    309,307,156,
    244,21,308,
    309,156,157,
    310,309,157,
    197,310,157,
    263,197,157,
    311,158,159,
    312,311,159,
    256,6,7,
    6,256,321,
    312,159,160,
    313,312,160,
    308,252,244,
    313,160,161,
    315,313,161,
    315,161,162,
    316,315,162,
    256,257,320,
    321,256,320,
    316,162,163,
    318,316,163,
    318,163,164,
    322,318,164,
    257,258,319,
    320,257,319,
    335,336,177,
    178,335,177,
    252,308,314,
    336,337,176,
    177,336,176,
    258,259,317,
    319,258,317,
    337,338,175,
    176,337,175,
    259,252,314,
    317,259,314,
    338,339,174,
    175,338,174,
    25,24,8,
    9,25,8,
    201,97,165,
    339,340,173,
    174,339,173,
    270,323,324,
    269,270,324,
    165,325,201,
    21,244,20,
    340,325,165,
    173,340,165,
    270,6,323,
    6,270,7,
    327,168,169,
    326,327,169,
    99,203,204,
    98,99,204,
    269,324,1,
    2,269,1,
    205,280,100,
    328,167,168,
    327,328,168,
    205,100,101,
    206,205,101,
    329,166,167,
    328,329,167,
    206,101,102,
    207,206,102,
    207,102,103,
    208,207,103,
    326,169,170,
    332,326,170,
    332,170,171,
    333,332,171,
    333,171,172,
    334,333,172,
    334,260,195,
    260,334,172,
    178,204,335,
    204,178,98,
    354,210,166,
    107,221,220,
    354,166,329,
    346,179,187,
    353,346,187,
    343,349,185,
    186,343,185,
    230,117,236,
    117,230,116,
    349,350,184,
    185,349,184,
    231,116,230,
    116,231,115,
    350,351,183,
    184,350,183,
    115,231,232,
    351,352,182,
    183,351,182,
    352,342,181,
    182,352,181,
    234,235,111,
    111,235,228,
    240,268,118,
    104,219,218,
    219,104,105,
    219,105,106,
    220,219,106,
    106,107,220,
    221,107,109,
    224,104,218,
    104,224,108,
    115,232,114,
    233,114,232,
    114,233,113,
    233,234,112,
    113,233,112,
    111,112,234,
    109,227,221,
    227,110,228,
    110,227,109,
    111,228,110,
    224,103,108,
    103,224,208,
    236,120,243,
    240,119,242,
    119,240,118,
    243,120,229,
    120,236,117,
    123,251,245,
    251,123,127,
    246,122,123,
    245,246,123,
    247,121,122,
    246,247,122,
    247,237,121,
    248,124,125,
    249,248,125,
    249,125,126,
    250,249,126,
    124,248,251,
    241,250,126,
    124,251,127,
    94,272,140,
    255,129,130,
    254,255,130,
    253,128,129,
    255,253,129,
    272,94,331,
    128,253,265,
    254,130,133,
    266,254,133,

        };
        verticesCount = _countof(tempVertices);
        indexCount = _countof(tempIndices);
        nameVertices = new GameApp::VertexPosColor[verticesCount];
        nameIndices = new WORD[indexCount];
        memcpy(nameVertices, tempVertices, sizeof(tempVertices));
        memcpy(nameIndices, tempIndices, sizeof(tempIndices));
    }
    break;

    default: // 兜底
        verticesCount = _countof(fallbackVerts);
        indexCount = _countof(fallbackIdx);
        nameVertices = new GameApp::VertexPosColor[verticesCount];
        nameIndices = new WORD[indexCount];
        memcpy(nameVertices, fallbackVerts, sizeof(fallbackVerts));
        memcpy(nameIndices, fallbackIdx, sizeof(fallbackIdx));
        break;
    }

    // 统一缩放（防止太大/太小）
    for (UINT i = 0; i < verticesCount; ++i)
    {
        nameVertices[i].pos.x *= 0.1f;
        nameVertices[i].pos.y *= 0.1f;
        nameVertices[i].pos.z *= 0.1f;
    }
}

NameVertices::~NameVertices()
{
    delete[] nameVertices;
    delete[] nameIndices;
}

GameApp::VertexPosColor* NameVertices::GetNameVertices() { return nameVertices; }
WORD* NameVertices::GetNameIndices() { return nameIndices; }
D3D11_PRIMITIVE_TOPOLOGY NameVertices::GetTopology() { return topology; }
UINT NameVertices::GetVerticesCount() { return verticesCount; }
UINT NameVertices::GetIndexCount() { return indexCount; }
